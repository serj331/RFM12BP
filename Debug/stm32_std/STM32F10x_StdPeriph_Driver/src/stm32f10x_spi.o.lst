   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_spi.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SPI_I2S_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	SPI_I2S_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	SPI_I2S_DeInit:
  25              	.LFB56:
  26              		.file 1 "../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c"
   1:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
   2:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
   3:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @file    stm32f10x_spi.c
   4:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @author  MCD Application Team
   5:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @version V3.5.0
   6:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @date    11-March-2011
   7:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief   This file provides all the SPI firmware functions.
   8:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
   9:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @attention
  10:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  11:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  18:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
  20:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  21:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  22:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* Includes ------------------------------------------------------------------*/
  23:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #include "stm32f10x_spi.h"
  24:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #include "stm32f10x_rcc.h"
  25:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  26:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  28:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  29:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  30:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI 
  31:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief SPI driver modules
  32:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  33:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */ 
  34:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  35:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_TypesDefinitions
  36:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  37:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  38:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  39:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  40:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  41:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */ 
  42:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  43:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  44:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Defines
  45:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  46:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  47:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  48:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI SPE mask */
  49:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_SPE_Set          ((uint16_t)0x0040)
  50:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_SPE_Reset        ((uint16_t)0xFFBF)
  51:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  52:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* I2S I2SE mask */
  53:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Set     ((uint16_t)0x0400)
  54:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Reset   ((uint16_t)0xFBFF)
  55:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  56:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI CRCNext mask */
  57:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCNext_Set      ((uint16_t)0x1000)
  58:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  59:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI CRCEN mask */
  60:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Set        ((uint16_t)0x2000)
  61:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Reset      ((uint16_t)0xDFFF)
  62:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  63:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI SSOE mask */
  64:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR2_SSOE_Set         ((uint16_t)0x0004)
  65:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR2_SSOE_Reset       ((uint16_t)0xFFFB)
  66:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  67:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI registers Masks */
  68:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CLEAR_Mask       ((uint16_t)0x3040)
  69:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_CLEAR_Mask   ((uint16_t)0xF040)
  70:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  71:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI or I2S mode selection masks */
  72:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define SPI_Mode_Select      ((uint16_t)0xF7FF)
  73:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_Mode_Select      ((uint16_t)0x0800) 
  74:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  75:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* I2S clock source selection masks */
  76:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S2_CLOCK_SRC       ((uint32_t)(0x00020000))
  77:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S3_CLOCK_SRC       ((uint32_t)(0x00040000))
  78:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_MUL_MASK         ((uint32_t)(0x0000F000))
  79:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_DIV_MASK         ((uint32_t)(0x000000F0))
  80:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  81:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  82:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  83:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  84:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  85:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Macros
  86:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  87:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  88:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  89:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  90:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  91:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  92:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  93:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Variables
  94:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  95:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  96:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  97:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  98:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  99:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 100:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 101:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_FunctionPrototypes
 102:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
 103:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 104:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 105:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 106:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
 107:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 108:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 109:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Functions
 110:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
 111:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 112:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 113:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 114:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Deinitializes the SPIx peripheral registers to their default
 115:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         reset values (Affects also the I2Ss).
 116:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 117:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 118:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 119:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 120:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
  27              		.loc 1 120 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 121:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 122:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 123:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 124:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPIx == SPI1)
  40              		.loc 1 124 0
  41 0008 7A68     		ldr	r2, [r7, #4]
  42 000a 4FF44053 		mov	r3, #12288
  43 000e C4F20103 		movt	r3, 16385
  44 0012 9A42     		cmp	r2, r3
  45 0014 0AD1     		bne	.L2
 125:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 126:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable SPI1 reset state */
 127:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
  46              		.loc 1 127 0
  47 0016 4FF48050 		mov	r0, #4096
  48 001a 0121     		movs	r1, #1
  49 001c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 128:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Release SPI1 from reset state */
 129:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
  50              		.loc 1 129 0
  51 0020 4FF48050 		mov	r0, #4096
  52 0024 0021     		movs	r1, #0
  53 0026 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  54 002a 22E0     		b	.L1
  55              	.L2:
 130:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 131:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else if (SPIx == SPI2)
  56              		.loc 1 131 0
  57 002c 7A68     		ldr	r2, [r7, #4]
  58 002e 4FF46053 		mov	r3, #14336
  59 0032 C4F20003 		movt	r3, 16384
  60 0036 9A42     		cmp	r2, r3
  61 0038 0AD1     		bne	.L4
 132:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 133:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable SPI2 reset state */
 134:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
  62              		.loc 1 134 0
  63 003a 4FF48040 		mov	r0, #16384
  64 003e 0121     		movs	r1, #1
  65 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 135:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Release SPI2 from reset state */
 136:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
  66              		.loc 1 136 0
  67 0044 4FF48040 		mov	r0, #16384
  68 0048 0021     		movs	r1, #0
  69 004a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  70 004e 10E0     		b	.L1
  71              	.L4:
 137:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 138:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 139:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 140:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if (SPIx == SPI3)
  72              		.loc 1 140 0
  73 0050 7A68     		ldr	r2, [r7, #4]
  74 0052 4FF47053 		mov	r3, #15360
  75 0056 C4F20003 		movt	r3, 16384
  76 005a 9A42     		cmp	r2, r3
  77 005c 09D1     		bne	.L1
 141:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 142:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Enable SPI3 reset state */
 143:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
  78              		.loc 1 143 0
  79 005e 4FF40040 		mov	r0, #32768
  80 0062 0121     		movs	r1, #1
  81 0064 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 144:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Release SPI3 from reset state */
 145:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
  82              		.loc 1 145 0
  83 0068 4FF40040 		mov	r0, #32768
  84 006c 0021     		movs	r1, #0
  85 006e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  86              	.L1:
 146:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 147:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 148:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
  87              		.loc 1 148 0
  88 0072 0837     		adds	r7, r7, #8
  89 0074 BD46     		mov	sp, r7
  90              		@ sp needed
  91 0076 80BD     		pop	{r7, pc}
  92              		.cfi_endproc
  93              	.LFE56:
  95              		.section	.text.SPI_Init,"ax",%progbits
  96              		.align	2
  97              		.global	SPI_Init
  98              		.thumb
  99              		.thumb_func
 101              	SPI_Init:
 102              	.LFB57:
 149:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 150:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 151:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 152:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         parameters in the SPI_InitStruct.
 153:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 154:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 155:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 156:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 157:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 158:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 159:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 103              		.loc 1 159 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 16
 106              		@ frame_needed = 1, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108 0000 80B4     		push	{r7}
 109              		.cfi_def_cfa_offset 4
 110              		.cfi_offset 7, -4
 111 0002 85B0     		sub	sp, sp, #20
 112              		.cfi_def_cfa_offset 24
 113 0004 00AF     		add	r7, sp, #0
 114              		.cfi_def_cfa_register 7
 115 0006 7860     		str	r0, [r7, #4]
 116 0008 3960     		str	r1, [r7]
 160:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0;
 117              		.loc 1 160 0
 118 000a 0023     		movs	r3, #0
 119 000c FB81     		strh	r3, [r7, #14]	@ movhi
 161:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 162:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* check the parameters */
 163:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));   
 164:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 165:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the SPI parameters */
 166:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 167:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 168:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 169:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 170:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 171:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 172:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 173:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 174:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 175:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 176:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 177:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPIx CR1 value */
 178:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->CR1;
 120              		.loc 1 178 0
 121 000e 7B68     		ldr	r3, [r7, #4]
 122 0010 1B88     		ldrh	r3, [r3]	@ movhi
 123 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 179:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 180:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg &= CR1_CLEAR_Mask;
 124              		.loc 1 180 0
 125 0014 FB89     		ldrh	r3, [r7, #14]	@ movhi
 126 0016 03F44153 		and	r3, r3, #12352
 127 001a FB81     		strh	r3, [r7, #14]	@ movhi
 181:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 182:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****      master/salve mode, CPOL and CPHA */
 183:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 184:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 185:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 186:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 187:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 188:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 189:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 128              		.loc 1 189 0
 129 001c 3B68     		ldr	r3, [r7]
 130 001e 1A88     		ldrh	r2, [r3]
 131 0020 3B68     		ldr	r3, [r7]
 132 0022 5B88     		ldrh	r3, [r3, #2]
 133 0024 1343     		orrs	r3, r3, r2
 134 0026 9AB2     		uxth	r2, r3
 190:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 135              		.loc 1 190 0
 136 0028 3B68     		ldr	r3, [r7]
 137 002a 9B88     		ldrh	r3, [r3, #4]
 189:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 138              		.loc 1 189 0
 139 002c 1343     		orrs	r3, r3, r2
 140 002e 9AB2     		uxth	r2, r3
 141              		.loc 1 190 0
 142 0030 3B68     		ldr	r3, [r7]
 143 0032 DB88     		ldrh	r3, [r3, #6]
 189:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 144              		.loc 1 189 0
 145 0034 1343     		orrs	r3, r3, r2
 146 0036 9AB2     		uxth	r2, r3
 191:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 147              		.loc 1 191 0
 148 0038 3B68     		ldr	r3, [r7]
 149 003a 1B89     		ldrh	r3, [r3, #8]
 189:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 150              		.loc 1 189 0
 151 003c 1343     		orrs	r3, r3, r2
 152 003e 9AB2     		uxth	r2, r3
 153              		.loc 1 191 0
 154 0040 3B68     		ldr	r3, [r7]
 155 0042 5B89     		ldrh	r3, [r3, #10]
 189:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 156              		.loc 1 189 0
 157 0044 1343     		orrs	r3, r3, r2
 158 0046 9AB2     		uxth	r2, r3
 192:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 159              		.loc 1 192 0
 160 0048 3B68     		ldr	r3, [r7]
 161 004a 9B89     		ldrh	r3, [r3, #12]
 189:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 162              		.loc 1 189 0
 163 004c 1343     		orrs	r3, r3, r2
 164 004e 9AB2     		uxth	r2, r3
 165              		.loc 1 192 0
 166 0050 3B68     		ldr	r3, [r7]
 167 0052 DB89     		ldrh	r3, [r3, #14]
 189:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 168              		.loc 1 189 0
 169 0054 1343     		orrs	r3, r3, r2
 170 0056 9AB2     		uxth	r2, r3
 171 0058 FB89     		ldrh	r3, [r7, #14]	@ movhi
 172 005a 1343     		orrs	r3, r3, r2
 173 005c FB81     		strh	r3, [r7, #14]	@ movhi
 193:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx CR1 */
 194:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 = tmpreg;
 174              		.loc 1 194 0
 175 005e 7B68     		ldr	r3, [r7, #4]
 176 0060 FA89     		ldrh	r2, [r7, #14]	@ movhi
 177 0062 1A80     		strh	r2, [r3]	@ movhi
 195:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 196:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 197:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= SPI_Mode_Select;		
 178              		.loc 1 197 0
 179 0064 7B68     		ldr	r3, [r7, #4]
 180 0066 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 181 0068 9BB2     		uxth	r3, r3
 182 006a 23F40063 		bic	r3, r3, #2048
 183 006e 9AB2     		uxth	r2, r3
 184 0070 7B68     		ldr	r3, [r7, #4]
 185 0072 9A83     		strh	r2, [r3, #28]	@ movhi
 198:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 199:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 200:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx CRCPOLY */
 201:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 186              		.loc 1 201 0
 187 0074 3B68     		ldr	r3, [r7]
 188 0076 1A8A     		ldrh	r2, [r3, #16]
 189 0078 7B68     		ldr	r3, [r7, #4]
 190 007a 1A82     		strh	r2, [r3, #16]	@ movhi
 202:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 191              		.loc 1 202 0
 192 007c 1437     		adds	r7, r7, #20
 193 007e BD46     		mov	sp, r7
 194              		@ sp needed
 195 0080 5DF8047B 		ldr	r7, [sp], #4
 196 0084 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE57:
 200 0086 00BF     		.section	.text.I2S_Init,"ax",%progbits
 201              		.align	2
 202              		.global	I2S_Init
 203              		.thumb
 204              		.thumb_func
 206              	I2S_Init:
 207              	.LFB58:
 203:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 204:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 205:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 206:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         parameters in the I2S_InitStruct.
 207:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral
 208:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         (configured in I2S mode).
 209:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 210:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 211:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         configured in I2S mode.
 212:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 213:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  The function calculates the optimal prescaler needed to obtain the most 
 214:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  accurate audio frequency (depending on the I2S clock source, the PLL values 
 215:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  and the product configuration). But in case the prescaler value is greater 
 216:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  than 511, the default value (0x02) will be configured instead.  *   
 217:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 218:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 219:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 220:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 208              		.loc 1 220 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 48
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212 0000 80B5     		push	{r7, lr}
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 8CB0     		sub	sp, sp, #48
 217              		.cfi_def_cfa_offset 56
 218 0004 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
 220 0006 7860     		str	r0, [r7, #4]
 221 0008 3960     		str	r1, [r7]
 221:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 222              		.loc 1 221 0
 223 000a 0023     		movs	r3, #0
 224 000c 7B84     		strh	r3, [r7, #34]	@ movhi
 225 000e 0223     		movs	r3, #2
 226 0010 FB85     		strh	r3, [r7, #46]	@ movhi
 227 0012 0023     		movs	r3, #0
 228 0014 BB85     		strh	r3, [r7, #44]	@ movhi
 229 0016 0123     		movs	r3, #1
 230 0018 7B85     		strh	r3, [r7, #42]	@ movhi
 222:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint32_t tmp = 0;
 231              		.loc 1 222 0
 232 001a 0023     		movs	r3, #0
 233 001c 7B62     		str	r3, [r7, #36]
 223:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   RCC_ClocksTypeDef RCC_Clocks;
 224:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint32_t sourceclock = 0;
 234              		.loc 1 224 0
 235 001e 0023     		movs	r3, #0
 236 0020 FB61     		str	r3, [r7, #28]
 225:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 226:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the I2S parameters */
 227:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 228:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 229:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 230:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 231:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 232:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 233:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 234:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 235:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 236:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 237:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_Mask; 
 237              		.loc 1 237 0
 238 0022 7B68     		ldr	r3, [r7, #4]
 239 0024 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 240 0026 9BB2     		uxth	r3, r3
 241 0028 23F47B63 		bic	r3, r3, #4016
 242 002c 23F00F03 		bic	r3, r3, #15
 243 0030 9AB2     		uxth	r2, r3
 244 0032 7B68     		ldr	r3, [r7, #4]
 245 0034 9A83     		strh	r2, [r3, #28]	@ movhi
 238:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SPR = 0x0002;
 246              		.loc 1 238 0
 247 0036 7B68     		ldr	r3, [r7, #4]
 248 0038 0222     		movs	r2, #2
 249 003a 1A84     		strh	r2, [r3, #32]	@ movhi
 239:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 240:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the I2SCFGR register value */
 241:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->I2SCFGR;
 250              		.loc 1 241 0
 251 003c 7B68     		ldr	r3, [r7, #4]
 252 003e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 253 0040 7B84     		strh	r3, [r7, #34]	@ movhi
 242:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 243:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 244:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 254              		.loc 1 244 0
 255 0042 3B68     		ldr	r3, [r7]
 256 0044 9B68     		ldr	r3, [r3, #8]
 257 0046 022B     		cmp	r3, #2
 258 0048 04D1     		bne	.L7
 245:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 246:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)0;
 259              		.loc 1 246 0
 260 004a 0023     		movs	r3, #0
 261 004c BB85     		strh	r3, [r7, #44]	@ movhi
 247:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)2;   
 262              		.loc 1 247 0
 263 004e 0223     		movs	r3, #2
 264 0050 FB85     		strh	r3, [r7, #46]	@ movhi
 265 0052 5AE0     		b	.L8
 266              	.L7:
 248:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 249:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 250:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 251:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 252:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the frame length (For the Prescaler computing) */
 253:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 267              		.loc 1 253 0
 268 0054 3B68     		ldr	r3, [r7]
 269 0056 9B88     		ldrh	r3, [r3, #4]
 270 0058 002B     		cmp	r3, #0
 271 005a 02D1     		bne	.L9
 254:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 255:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Packet length is 16 bits */
 256:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       packetlength = 1;
 272              		.loc 1 256 0
 273 005c 0123     		movs	r3, #1
 274 005e 7B85     		strh	r3, [r7, #42]	@ movhi
 275 0060 01E0     		b	.L10
 276              	.L9:
 257:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 258:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 259:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 260:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Packet length is 32 bits */
 261:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       packetlength = 2;
 277              		.loc 1 261 0
 278 0062 0223     		movs	r3, #2
 279 0064 7B85     		strh	r3, [r7, #42]	@ movhi
 280              	.L10:
 262:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 263:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 264:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the I2S clock source mask depending on the peripheral number */
 265:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(((uint32_t)SPIx) == SPI2_BASE)
 281              		.loc 1 265 0
 282 0066 7A68     		ldr	r2, [r7, #4]
 283 0068 4FF46053 		mov	r3, #14336
 284 006c C4F20003 		movt	r3, 16384
 285 0070 9A42     		cmp	r2, r3
 286 0072 03D1     		bne	.L11
 266:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 267:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S2 */
 268:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = I2S2_CLOCK_SRC;
 287              		.loc 1 268 0
 288 0074 4FF40033 		mov	r3, #131072
 289 0078 7B62     		str	r3, [r7, #36]
 290 007a 02E0     		b	.L12
 291              	.L11:
 269:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 270:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else 
 271:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 272:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S3 */      
 273:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = I2S3_CLOCK_SRC;
 292              		.loc 1 273 0
 293 007c 4FF48023 		mov	r3, #262144
 294 0080 7B62     		str	r3, [r7, #36]
 295              	.L12:
 274:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 275:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 276:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the I2S clock source configuration depending on the Device:
 277:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****        Only Connectivity line devices have the PLL3 VCO clock */
 278:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #ifdef STM32F10X_CL
 279:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if((RCC->CFGR2 & tmp) != 0)
 280:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 281:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the configuration bits of RCC PLL3 multiplier */
 282:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint32_t)((RCC->CFGR2 & I2S_MUL_MASK) >> 12);
 283:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 284:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the value of the PLL3 multiplier */      
 285:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       if((tmp > 5) && (tmp < 15))
 286:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       {
 287:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         /* Multiplier is between 8 and 14 (value 15 is forbidden) */
 288:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         tmp += 2;
 289:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       }
 290:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       else
 291:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       {
 292:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         if (tmp == 15)
 293:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         {
 294:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****           /* Multiplier is 20 */
 295:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****           tmp = 20;
 296:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         }
 297:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       }      
 298:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the PREDIV2 value */
 299:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t)(((RCC->CFGR2 & I2S_DIV_MASK) >> 4) + 1);
 300:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 301:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Calculate the Source Clock frequency based on PLL3 and PREDIV2 values */
 302:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t) ((HSE_Value / sourceclock) * tmp * 2); 
 303:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 304:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 305:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 306:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* I2S Clock source is System clock: Get System Clock frequency */
 307:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_GetClocksFreq(&RCC_Clocks);      
 308:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 309:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the source clock value: based on System Clock value */
 310:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = RCC_Clocks.SYSCLK_Frequency;
 311:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }        
 312:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #else /* STM32F10X_HD */
 313:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* I2S Clock source is System clock: Get System Clock frequency */
 314:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_GetClocksFreq(&RCC_Clocks);      
 296              		.loc 1 314 0
 297 0082 07F10803 		add	r3, r7, #8
 298 0086 1846     		mov	r0, r3
 299 0088 FFF7FEFF 		bl	RCC_GetClocksFreq
 315:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 316:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the source clock value: based on System Clock value */
 317:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     sourceclock = RCC_Clocks.SYSCLK_Frequency;    
 300              		.loc 1 317 0
 301 008c BB68     		ldr	r3, [r7, #8]
 302 008e FB61     		str	r3, [r7, #28]
 318:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #endif /* STM32F10X_CL */    
 319:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 320:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Compute the Real divider depending on the MCLK output state with a floating point */
 321:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 303              		.loc 1 321 0
 304 0090 3B68     		ldr	r3, [r7]
 305 0092 DB88     		ldrh	r3, [r3, #6]
 306 0094 B3F5007F 		cmp	r3, #512
 307 0098 0FD1     		bne	.L13
 322:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 323:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* MCLK output is enabled */
 324:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 308              		.loc 1 324 0
 309 009a FB69     		ldr	r3, [r7, #28]
 310 009c 1A0A     		lsrs	r2, r3, #8
 311 009e 1346     		mov	r3, r2
 312 00a0 9B00     		lsls	r3, r3, #2
 313 00a2 1344     		add	r3, r3, r2
 314 00a4 5B00     		lsls	r3, r3, #1
 315 00a6 1A46     		mov	r2, r3
 316 00a8 3B68     		ldr	r3, [r7]
 317 00aa 9B68     		ldr	r3, [r3, #8]
 318 00ac B2FBF3F3 		udiv	r3, r2, r3
 319 00b0 9BB2     		uxth	r3, r3
 320 00b2 0533     		adds	r3, r3, #5
 321 00b4 9BB2     		uxth	r3, r3
 322 00b6 7B62     		str	r3, [r7, #36]
 323 00b8 11E0     		b	.L14
 324              	.L13:
 325:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 326:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 327:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 328:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* MCLK output is disabled */
 329:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq
 325              		.loc 1 329 0
 326 00ba 7B8D     		ldrh	r3, [r7, #42]
 327 00bc 5B01     		lsls	r3, r3, #5
 328 00be FA69     		ldr	r2, [r7, #28]
 329 00c0 B2FBF3F2 		udiv	r2, r2, r3
 330 00c4 1346     		mov	r3, r2
 331 00c6 9B00     		lsls	r3, r3, #2
 332 00c8 1344     		add	r3, r3, r2
 333 00ca 5B00     		lsls	r3, r3, #1
 334 00cc 1A46     		mov	r2, r3
 335 00ce 3B68     		ldr	r3, [r7]
 336 00d0 9B68     		ldr	r3, [r3, #8]
 337 00d2 B2FBF3F3 		udiv	r3, r2, r3
 338 00d6 9BB2     		uxth	r3, r3
 339 00d8 0533     		adds	r3, r3, #5
 340 00da 9BB2     		uxth	r3, r3
 341 00dc 7B62     		str	r3, [r7, #36]
 342              	.L14:
 330:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 331:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     
 332:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Remove the floating point */
 333:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     tmp = tmp / 10;  
 343              		.loc 1 333 0
 344 00de 7A6A     		ldr	r2, [r7, #36]
 345 00e0 4CF6CD43 		movw	r3, #52429
 346 00e4 CCF6CC43 		movt	r3, 52428
 347 00e8 A3FB0213 		umull	r1, r3, r3, r2
 348 00ec DB08     		lsrs	r3, r3, #3
 349 00ee 7B62     		str	r3, [r7, #36]
 334:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 335:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the parity of the divider */
 336:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 350              		.loc 1 336 0
 351 00f0 7B6A     		ldr	r3, [r7, #36]
 352 00f2 9BB2     		uxth	r3, r3
 353 00f4 03F00103 		and	r3, r3, #1
 354 00f8 BB85     		strh	r3, [r7, #44]	@ movhi
 337:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****    
 338:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Compute the i2sdiv prescaler */
 339:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 355              		.loc 1 339 0
 356 00fa BB8D     		ldrh	r3, [r7, #44]
 357 00fc 7A6A     		ldr	r2, [r7, #36]
 358 00fe D31A     		subs	r3, r2, r3
 359 0100 5B08     		lsrs	r3, r3, #1
 360 0102 FB85     		strh	r3, [r7, #46]	@ movhi
 340:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****    
 341:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 342:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 361              		.loc 1 342 0
 362 0104 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 363 0106 1B02     		lsls	r3, r3, #8
 364 0108 BB85     		strh	r3, [r7, #44]	@ movhi
 365              	.L8:
 343:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 344:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 345:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 346:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 366              		.loc 1 346 0
 367 010a FB8D     		ldrh	r3, [r7, #46]
 368 010c 012B     		cmp	r3, #1
 369 010e 02D9     		bls	.L15
 370              		.loc 1 346 0 is_stmt 0 discriminator 1
 371 0110 FB8D     		ldrh	r3, [r7, #46]
 372 0112 FF2B     		cmp	r3, #255
 373 0114 03D9     		bls	.L16
 374              	.L15:
 347:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 348:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the default values */
 349:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = 2;
 375              		.loc 1 349 0 is_stmt 1
 376 0116 0223     		movs	r3, #2
 377 0118 FB85     		strh	r3, [r7, #46]	@ movhi
 350:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = 0;
 378              		.loc 1 350 0
 379 011a 0023     		movs	r3, #0
 380 011c BB85     		strh	r3, [r7, #44]	@ movhi
 381              	.L16:
 351:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 352:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 353:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 354:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SPR = (uint16_t)(i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCLKOutput));
 382              		.loc 1 354 0
 383 011e 3B68     		ldr	r3, [r7]
 384 0120 DA88     		ldrh	r2, [r3, #6]
 385 0122 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 386 0124 1343     		orrs	r3, r3, r2
 387 0126 9AB2     		uxth	r2, r3
 388 0128 FB8D     		ldrh	r3, [r7, #46]	@ movhi
 389 012a 1343     		orrs	r3, r3, r2
 390 012c 9AB2     		uxth	r2, r3
 391 012e 7B68     		ldr	r3, [r7, #4]
 392 0130 1A84     		strh	r2, [r3, #32]	@ movhi
 355:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****  
 356:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 357:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 393              		.loc 1 357 0
 394 0132 3B68     		ldr	r3, [r7]
 395 0134 1A88     		ldrh	r2, [r3]
 358:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 396              		.loc 1 358 0
 397 0136 3B68     		ldr	r3, [r7]
 398 0138 5988     		ldrh	r1, [r3, #2]
 399 013a 3B68     		ldr	r3, [r7]
 400 013c 9888     		ldrh	r0, [r3, #4]
 359:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 401              		.loc 1 359 0
 402 013e 3B68     		ldr	r3, [r7]
 403 0140 9B89     		ldrh	r3, [r3, #12]
 358:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 404              		.loc 1 358 0
 405 0142 0343     		orrs	r3, r3, r0
 406 0144 9BB2     		uxth	r3, r3
 407 0146 0B43     		orrs	r3, r3, r1
 408 0148 9BB2     		uxth	r3, r3
 357:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 409              		.loc 1 357 0
 410 014a 1343     		orrs	r3, r3, r2
 411 014c 9AB2     		uxth	r2, r3
 412 014e 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 413 0150 1343     		orrs	r3, r3, r2
 414 0152 9BB2     		uxth	r3, r3
 415 0154 43F40063 		orr	r3, r3, #2048
 416 0158 7B84     		strh	r3, [r7, #34]	@ movhi
 360:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****  
 361:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SCFGR */  
 362:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR = tmpreg;   
 417              		.loc 1 362 0
 418 015a 7B68     		ldr	r3, [r7, #4]
 419 015c 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 420 015e 9A83     		strh	r2, [r3, #28]	@ movhi
 363:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 421              		.loc 1 363 0
 422 0160 3037     		adds	r7, r7, #48
 423 0162 BD46     		mov	sp, r7
 424              		@ sp needed
 425 0164 80BD     		pop	{r7, pc}
 426              		.cfi_endproc
 427              	.LFE58:
 429              		.section	.text.SPI_StructInit,"ax",%progbits
 430              		.align	2
 431              		.global	SPI_StructInit
 432              		.thumb
 433              		.thumb_func
 435              	SPI_StructInit:
 436              	.LFB59:
 364:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 365:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 366:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 367:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct : pointer to a SPI_InitTypeDef structure which will be initialized.
 368:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 369:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 370:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 371:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 437              		.loc 1 371 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 8
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442 0000 80B4     		push	{r7}
 443              		.cfi_def_cfa_offset 4
 444              		.cfi_offset 7, -4
 445 0002 83B0     		sub	sp, sp, #12
 446              		.cfi_def_cfa_offset 16
 447 0004 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 449 0006 7860     		str	r0, [r7, #4]
 372:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 373:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_Direction member */
 374:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 450              		.loc 1 374 0
 451 0008 7B68     		ldr	r3, [r7, #4]
 452 000a 0022     		movs	r2, #0
 453 000c 1A80     		strh	r2, [r3]	@ movhi
 375:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* initialize the SPI_Mode member */
 376:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 454              		.loc 1 376 0
 455 000e 7B68     		ldr	r3, [r7, #4]
 456 0010 0022     		movs	r2, #0
 457 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 377:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* initialize the SPI_DataSize member */
 378:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 458              		.loc 1 378 0
 459 0014 7B68     		ldr	r3, [r7, #4]
 460 0016 0022     		movs	r2, #0
 461 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 379:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPOL member */
 380:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 462              		.loc 1 380 0
 463 001a 7B68     		ldr	r3, [r7, #4]
 464 001c 0022     		movs	r2, #0
 465 001e DA80     		strh	r2, [r3, #6]	@ movhi
 381:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPHA member */
 382:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 466              		.loc 1 382 0
 467 0020 7B68     		ldr	r3, [r7, #4]
 468 0022 0022     		movs	r2, #0
 469 0024 1A81     		strh	r2, [r3, #8]	@ movhi
 383:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_NSS member */
 384:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 470              		.loc 1 384 0
 471 0026 7B68     		ldr	r3, [r7, #4]
 472 0028 0022     		movs	r2, #0
 473 002a 5A81     		strh	r2, [r3, #10]	@ movhi
 385:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 386:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 474              		.loc 1 386 0
 475 002c 7B68     		ldr	r3, [r7, #4]
 476 002e 0022     		movs	r2, #0
 477 0030 9A81     		strh	r2, [r3, #12]	@ movhi
 387:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_FirstBit member */
 388:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 478              		.loc 1 388 0
 479 0032 7B68     		ldr	r3, [r7, #4]
 480 0034 0022     		movs	r2, #0
 481 0036 DA81     		strh	r2, [r3, #14]	@ movhi
 389:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 390:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 482              		.loc 1 390 0
 483 0038 7B68     		ldr	r3, [r7, #4]
 484 003a 0722     		movs	r2, #7
 485 003c 1A82     		strh	r2, [r3, #16]	@ movhi
 391:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 486              		.loc 1 391 0
 487 003e 0C37     		adds	r7, r7, #12
 488 0040 BD46     		mov	sp, r7
 489              		@ sp needed
 490 0042 5DF8047B 		ldr	r7, [sp], #4
 491 0046 7047     		bx	lr
 492              		.cfi_endproc
 493              	.LFE59:
 495              		.section	.text.I2S_StructInit,"ax",%progbits
 496              		.align	2
 497              		.global	I2S_StructInit
 498              		.thumb
 499              		.thumb_func
 501              	I2S_StructInit:
 502              	.LFB60:
 392:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 393:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 394:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 395:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct : pointer to a I2S_InitTypeDef structure which will be initialized.
 396:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 397:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 398:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 399:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 503              		.loc 1 399 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 8
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 7, -4
 511 0002 83B0     		sub	sp, sp, #12
 512              		.cfi_def_cfa_offset 16
 513 0004 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 515 0006 7860     		str	r0, [r7, #4]
 400:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 401:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Mode member */
 402:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 516              		.loc 1 402 0
 517 0008 7B68     		ldr	r3, [r7, #4]
 518 000a 0022     		movs	r2, #0
 519 000c 1A80     		strh	r2, [r3]	@ movhi
 403:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 404:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Standard member */
 405:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 520              		.loc 1 405 0
 521 000e 7B68     		ldr	r3, [r7, #4]
 522 0010 0022     		movs	r2, #0
 523 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 406:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 407:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_DataFormat member */
 408:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 524              		.loc 1 408 0
 525 0014 7B68     		ldr	r3, [r7, #4]
 526 0016 0022     		movs	r2, #0
 527 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 409:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 410:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 411:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 528              		.loc 1 411 0
 529 001a 7B68     		ldr	r3, [r7, #4]
 530 001c 0022     		movs	r2, #0
 531 001e DA80     		strh	r2, [r3, #6]	@ movhi
 412:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 413:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_AudioFreq member */
 414:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 532              		.loc 1 414 0
 533 0020 7B68     		ldr	r3, [r7, #4]
 534 0022 0222     		movs	r2, #2
 535 0024 9A60     		str	r2, [r3, #8]
 415:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 416:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_CPOL member */
 417:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 536              		.loc 1 417 0
 537 0026 7B68     		ldr	r3, [r7, #4]
 538 0028 0022     		movs	r2, #0
 539 002a 9A81     		strh	r2, [r3, #12]	@ movhi
 418:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 540              		.loc 1 418 0
 541 002c 0C37     		adds	r7, r7, #12
 542 002e BD46     		mov	sp, r7
 543              		@ sp needed
 544 0030 5DF8047B 		ldr	r7, [sp], #4
 545 0034 7047     		bx	lr
 546              		.cfi_endproc
 547              	.LFE60:
 549 0036 00BF     		.section	.text.SPI_Cmd,"ax",%progbits
 550              		.align	2
 551              		.global	SPI_Cmd
 552              		.thumb
 553              		.thumb_func
 555              	SPI_Cmd:
 556              	.LFB61:
 419:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 420:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 421:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 422:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 423:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 424:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 425:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 426:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 427:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 428:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 557              		.loc 1 428 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562 0000 80B4     		push	{r7}
 563              		.cfi_def_cfa_offset 4
 564              		.cfi_offset 7, -4
 565 0002 83B0     		sub	sp, sp, #12
 566              		.cfi_def_cfa_offset 16
 567 0004 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 569 0006 7860     		str	r0, [r7, #4]
 570 0008 0B46     		mov	r3, r1
 571 000a FB70     		strb	r3, [r7, #3]
 429:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 430:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 431:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 432:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 572              		.loc 1 432 0
 573 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 574 000e 002B     		cmp	r3, #0
 575 0010 08D0     		beq	.L20
 433:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 434:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral */
 435:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_SPE_Set;
 576              		.loc 1 435 0
 577 0012 7B68     		ldr	r3, [r7, #4]
 578 0014 1B88     		ldrh	r3, [r3]	@ movhi
 579 0016 9BB2     		uxth	r3, r3
 580 0018 43F04003 		orr	r3, r3, #64
 581 001c 9AB2     		uxth	r2, r3
 582 001e 7B68     		ldr	r3, [r7, #4]
 583 0020 1A80     		strh	r2, [r3]	@ movhi
 584 0022 07E0     		b	.L19
 585              	.L20:
 436:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 437:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 438:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 439:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral */
 440:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_SPE_Reset;
 586              		.loc 1 440 0
 587 0024 7B68     		ldr	r3, [r7, #4]
 588 0026 1B88     		ldrh	r3, [r3]	@ movhi
 589 0028 9BB2     		uxth	r3, r3
 590 002a 23F04003 		bic	r3, r3, #64
 591 002e 9AB2     		uxth	r2, r3
 592 0030 7B68     		ldr	r3, [r7, #4]
 593 0032 1A80     		strh	r2, [r3]	@ movhi
 594              	.L19:
 441:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 442:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 595              		.loc 1 442 0
 596 0034 0C37     		adds	r7, r7, #12
 597 0036 BD46     		mov	sp, r7
 598              		@ sp needed
 599 0038 5DF8047B 		ldr	r7, [sp], #4
 600 003c 7047     		bx	lr
 601              		.cfi_endproc
 602              	.LFE61:
 604 003e 00BF     		.section	.text.I2S_Cmd,"ax",%progbits
 605              		.align	2
 606              		.global	I2S_Cmd
 607              		.thumb
 608              		.thumb_func
 610              	I2S_Cmd:
 611              	.LFB62:
 443:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 444:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 445:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 446:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral.
 447:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 448:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 449:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 450:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 451:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 452:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 612              		.loc 1 452 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 8
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617 0000 80B4     		push	{r7}
 618              		.cfi_def_cfa_offset 4
 619              		.cfi_offset 7, -4
 620 0002 83B0     		sub	sp, sp, #12
 621              		.cfi_def_cfa_offset 16
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 624 0006 7860     		str	r0, [r7, #4]
 625 0008 0B46     		mov	r3, r1
 626 000a FB70     		strb	r3, [r7, #3]
 453:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 454:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 455:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 456:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 627              		.loc 1 456 0
 628 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 629 000e 002B     		cmp	r3, #0
 630 0010 08D0     		beq	.L23
 457:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 458:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 459:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR |= I2SCFGR_I2SE_Set;
 631              		.loc 1 459 0
 632 0012 7B68     		ldr	r3, [r7, #4]
 633 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 634 0016 9BB2     		uxth	r3, r3
 635 0018 43F48063 		orr	r3, r3, #1024
 636 001c 9AB2     		uxth	r2, r3
 637 001e 7B68     		ldr	r3, [r7, #4]
 638 0020 9A83     		strh	r2, [r3, #28]	@ movhi
 639 0022 07E0     		b	.L22
 640              	.L23:
 460:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 461:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 462:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 463:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral (in I2S mode) */
 464:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR &= I2SCFGR_I2SE_Reset;
 641              		.loc 1 464 0
 642 0024 7B68     		ldr	r3, [r7, #4]
 643 0026 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 644 0028 9BB2     		uxth	r3, r3
 645 002a 23F48063 		bic	r3, r3, #1024
 646 002e 9AB2     		uxth	r2, r3
 647 0030 7B68     		ldr	r3, [r7, #4]
 648 0032 9A83     		strh	r2, [r3, #28]	@ movhi
 649              	.L22:
 465:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 466:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 650              		.loc 1 466 0
 651 0034 0C37     		adds	r7, r7, #12
 652 0036 BD46     		mov	sp, r7
 653              		@ sp needed
 654 0038 5DF8047B 		ldr	r7, [sp], #4
 655 003c 7047     		bx	lr
 656              		.cfi_endproc
 657              	.LFE62:
 659 003e 00BF     		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 660              		.align	2
 661              		.global	SPI_I2S_ITConfig
 662              		.thumb
 663              		.thumb_func
 665              	SPI_I2S_ITConfig:
 666              	.LFB63:
 467:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 468:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 469:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
 470:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 471:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 472:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 473:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to be enabled or disabled. 
 474:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 475:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
 476:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
 477:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_ERR: Error interrupt mask
 478:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the specified SPI/I2S interrupt.
 479:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 480:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 481:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 482:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
 483:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 667              		.loc 1 483 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 16
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 672 0000 80B4     		push	{r7}
 673              		.cfi_def_cfa_offset 4
 674              		.cfi_offset 7, -4
 675 0002 85B0     		sub	sp, sp, #20
 676              		.cfi_def_cfa_offset 24
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 680 0008 1346     		mov	r3, r2
 681 000a 0A46     		mov	r2, r1
 682 000c FA70     		strb	r2, [r7, #3]
 683 000e BB70     		strb	r3, [r7, #2]
 484:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 684              		.loc 1 484 0
 685 0010 0023     		movs	r3, #0
 686 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 687 0014 0023     		movs	r3, #0
 688 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 485:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 486:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 487:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 488:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
 489:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 490:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 491:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = SPI_I2S_IT >> 4;
 689              		.loc 1 491 0
 690 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 691 001a 1B09     		lsrs	r3, r3, #4
 692 001c DBB2     		uxtb	r3, r3
 693 001e FB81     		strh	r3, [r7, #14]	@ movhi
 492:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 493:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 494:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 694              		.loc 1 494 0
 695 0020 FB89     		ldrh	r3, [r7, #14]
 696 0022 0122     		movs	r2, #1
 697 0024 02FA03F3 		lsl	r3, r2, r3
 698 0028 BB81     		strh	r3, [r7, #12]	@ movhi
 495:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 496:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 699              		.loc 1 496 0
 700 002a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 701 002c 002B     		cmp	r3, #0
 702 002e 08D0     		beq	.L26
 497:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 498:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S interrupt */
 499:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= itmask;
 703              		.loc 1 499 0
 704 0030 7B68     		ldr	r3, [r7, #4]
 705 0032 9B88     		ldrh	r3, [r3, #4]	@ movhi
 706 0034 9AB2     		uxth	r2, r3
 707 0036 BB89     		ldrh	r3, [r7, #12]	@ movhi
 708 0038 1343     		orrs	r3, r3, r2
 709 003a 9AB2     		uxth	r2, r3
 710 003c 7B68     		ldr	r3, [r7, #4]
 711 003e 9A80     		strh	r2, [r3, #4]	@ movhi
 712 0040 09E0     		b	.L25
 713              	.L26:
 500:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 501:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 502:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 503:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S interrupt */
 504:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 714              		.loc 1 504 0
 715 0042 7B68     		ldr	r3, [r7, #4]
 716 0044 9B88     		ldrh	r3, [r3, #4]	@ movhi
 717 0046 9AB2     		uxth	r2, r3
 718 0048 BB89     		ldrh	r3, [r7, #12]	@ movhi
 719 004a DB43     		mvns	r3, r3
 720 004c 9BB2     		uxth	r3, r3
 721 004e 1340     		ands	r3, r3, r2
 722 0050 9AB2     		uxth	r2, r3
 723 0052 7B68     		ldr	r3, [r7, #4]
 724 0054 9A80     		strh	r2, [r3, #4]	@ movhi
 725              	.L25:
 505:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 506:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 726              		.loc 1 506 0
 727 0056 1437     		adds	r7, r7, #20
 728 0058 BD46     		mov	sp, r7
 729              		@ sp needed
 730 005a 5DF8047B 		ldr	r7, [sp], #4
 731 005e 7047     		bx	lr
 732              		.cfi_endproc
 733              	.LFE63:
 735              		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 736              		.align	2
 737              		.global	SPI_I2S_DMACmd
 738              		.thumb
 739              		.thumb_func
 741              	SPI_I2S_DMACmd:
 742              	.LFB64:
 507:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 508:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 509:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 510:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 511:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 512:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 513:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI/I2S DMA transfer request to be enabled or disabled. 
 514:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be any combination of the following values:
 515:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
 516:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
 517:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the selected SPI/I2S DMA transfer request.
 518:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 519:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 520:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 521:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
 522:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 743              		.loc 1 522 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 8
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748 0000 80B4     		push	{r7}
 749              		.cfi_def_cfa_offset 4
 750              		.cfi_offset 7, -4
 751 0002 83B0     		sub	sp, sp, #12
 752              		.cfi_def_cfa_offset 16
 753 0004 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 755 0006 7860     		str	r0, [r7, #4]
 756 0008 1346     		mov	r3, r2
 757 000a 0A46     		mov	r2, r1	@ movhi
 758 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 759 000e 7B70     		strb	r3, [r7, #1]
 523:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 524:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 525:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 526:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
 527:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 760              		.loc 1 527 0
 761 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 762 0012 002B     		cmp	r3, #0
 763 0014 08D0     		beq	.L29
 528:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 529:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S DMA requests */
 530:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 764              		.loc 1 530 0
 765 0016 7B68     		ldr	r3, [r7, #4]
 766 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 767 001a 9AB2     		uxth	r2, r3
 768 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 769 001e 1343     		orrs	r3, r3, r2
 770 0020 9AB2     		uxth	r2, r3
 771 0022 7B68     		ldr	r3, [r7, #4]
 772 0024 9A80     		strh	r2, [r3, #4]	@ movhi
 773 0026 09E0     		b	.L28
 774              	.L29:
 531:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 532:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 533:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 534:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S DMA requests */
 535:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 775              		.loc 1 535 0
 776 0028 7B68     		ldr	r3, [r7, #4]
 777 002a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 778 002c 9AB2     		uxth	r2, r3
 779 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 780 0030 DB43     		mvns	r3, r3
 781 0032 9BB2     		uxth	r3, r3
 782 0034 1340     		ands	r3, r3, r2
 783 0036 9AB2     		uxth	r2, r3
 784 0038 7B68     		ldr	r3, [r7, #4]
 785 003a 9A80     		strh	r2, [r3, #4]	@ movhi
 786              	.L28:
 536:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 537:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 787              		.loc 1 537 0
 788 003c 0C37     		adds	r7, r7, #12
 789 003e BD46     		mov	sp, r7
 790              		@ sp needed
 791 0040 5DF8047B 		ldr	r7, [sp], #4
 792 0044 7047     		bx	lr
 793              		.cfi_endproc
 794              	.LFE64:
 796 0046 00BF     		.section	.text.SPI_I2S_SendData,"ax",%progbits
 797              		.align	2
 798              		.global	SPI_I2S_SendData
 799              		.thumb
 800              		.thumb_func
 802              	SPI_I2S_SendData:
 803              	.LFB65:
 538:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 539:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 540:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 541:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 542:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 543:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 544:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  Data : Data to be transmitted.
 545:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 546:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 547:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 548:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 804              		.loc 1 548 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 8
 807              		@ frame_needed = 1, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809 0000 80B4     		push	{r7}
 810              		.cfi_def_cfa_offset 4
 811              		.cfi_offset 7, -4
 812 0002 83B0     		sub	sp, sp, #12
 813              		.cfi_def_cfa_offset 16
 814 0004 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 816 0006 7860     		str	r0, [r7, #4]
 817 0008 0B46     		mov	r3, r1
 818 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 549:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 550:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 551:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 552:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write in the DR register the data to be sent */
 553:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->DR = Data;
 819              		.loc 1 553 0
 820 000c 7B68     		ldr	r3, [r7, #4]
 821 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 822 0010 9A81     		strh	r2, [r3, #12]	@ movhi
 554:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 823              		.loc 1 554 0
 824 0012 0C37     		adds	r7, r7, #12
 825 0014 BD46     		mov	sp, r7
 826              		@ sp needed
 827 0016 5DF8047B 		ldr	r7, [sp], #4
 828 001a 7047     		bx	lr
 829              		.cfi_endproc
 830              	.LFE65:
 832              		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 833              		.align	2
 834              		.global	SPI_I2S_ReceiveData
 835              		.thumb
 836              		.thumb_func
 838              	SPI_I2S_ReceiveData:
 839              	.LFB66:
 555:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 556:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 557:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 558:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 559:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 560:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 561:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The value of the received data.
 562:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 563:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 564:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 840              		.loc 1 564 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 8
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845 0000 80B4     		push	{r7}
 846              		.cfi_def_cfa_offset 4
 847              		.cfi_offset 7, -4
 848 0002 83B0     		sub	sp, sp, #12
 849              		.cfi_def_cfa_offset 16
 850 0004 00AF     		add	r7, sp, #0
 851              		.cfi_def_cfa_register 7
 852 0006 7860     		str	r0, [r7, #4]
 565:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 566:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 567:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 568:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the data in the DR register */
 569:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return SPIx->DR;
 853              		.loc 1 569 0
 854 0008 7B68     		ldr	r3, [r7, #4]
 855 000a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 856 000c 9BB2     		uxth	r3, r3
 570:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 857              		.loc 1 570 0
 858 000e 1846     		mov	r0, r3
 859 0010 0C37     		adds	r7, r7, #12
 860 0012 BD46     		mov	sp, r7
 861              		@ sp needed
 862 0014 5DF8047B 		ldr	r7, [sp], #4
 863 0018 7047     		bx	lr
 864              		.cfi_endproc
 865              	.LFE66:
 867 001a 00BF     		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 868              		.align	2
 869              		.global	SPI_NSSInternalSoftwareConfig
 870              		.thumb
 871              		.thumb_func
 873              	SPI_NSSInternalSoftwareConfig:
 874              	.LFB67:
 571:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 572:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 573:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 574:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 575:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 576:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 577:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 578:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 579:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 580:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 581:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 582:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 875              		.loc 1 582 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 8
 878              		@ frame_needed = 1, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880 0000 80B4     		push	{r7}
 881              		.cfi_def_cfa_offset 4
 882              		.cfi_offset 7, -4
 883 0002 83B0     		sub	sp, sp, #12
 884              		.cfi_def_cfa_offset 16
 885 0004 00AF     		add	r7, sp, #0
 886              		.cfi_def_cfa_register 7
 887 0006 7860     		str	r0, [r7, #4]
 888 0008 0B46     		mov	r3, r1
 889 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 583:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 584:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 585:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 586:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 890              		.loc 1 586 0
 891 000c 7A88     		ldrh	r2, [r7, #2]
 892 000e 4FF6FF63 		movw	r3, #65279
 893 0012 9A42     		cmp	r2, r3
 894 0014 08D0     		beq	.L35
 587:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 588:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set NSS pin internally by software */
 589:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 895              		.loc 1 589 0
 896 0016 7B68     		ldr	r3, [r7, #4]
 897 0018 1B88     		ldrh	r3, [r3]	@ movhi
 898 001a 9BB2     		uxth	r3, r3
 899 001c 43F48073 		orr	r3, r3, #256
 900 0020 9AB2     		uxth	r2, r3
 901 0022 7B68     		ldr	r3, [r7, #4]
 902 0024 1A80     		strh	r2, [r3]	@ movhi
 903 0026 07E0     		b	.L34
 904              	.L35:
 590:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 591:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 592:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 593:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Reset NSS pin internally by software */
 594:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 905              		.loc 1 594 0
 906 0028 7B68     		ldr	r3, [r7, #4]
 907 002a 1B88     		ldrh	r3, [r3]	@ movhi
 908 002c 9BB2     		uxth	r3, r3
 909 002e 23F48073 		bic	r3, r3, #256
 910 0032 9AB2     		uxth	r2, r3
 911 0034 7B68     		ldr	r3, [r7, #4]
 912 0036 1A80     		strh	r2, [r3]	@ movhi
 913              	.L34:
 595:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 596:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 914              		.loc 1 596 0
 915 0038 0C37     		adds	r7, r7, #12
 916 003a BD46     		mov	sp, r7
 917              		@ sp needed
 918 003c 5DF8047B 		ldr	r7, [sp], #4
 919 0040 7047     		bx	lr
 920              		.cfi_endproc
 921              	.LFE67:
 923 0042 00BF     		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 924              		.align	2
 925              		.global	SPI_SSOutputCmd
 926              		.thumb
 927              		.thumb_func
 929              	SPI_SSOutputCmd:
 930              	.LFB68:
 597:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 598:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 599:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 600:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 601:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 602:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 603:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 604:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 605:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 606:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 931              		.loc 1 606 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 8
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936 0000 80B4     		push	{r7}
 937              		.cfi_def_cfa_offset 4
 938              		.cfi_offset 7, -4
 939 0002 83B0     		sub	sp, sp, #12
 940              		.cfi_def_cfa_offset 16
 941 0004 00AF     		add	r7, sp, #0
 942              		.cfi_def_cfa_register 7
 943 0006 7860     		str	r0, [r7, #4]
 944 0008 0B46     		mov	r3, r1
 945 000a FB70     		strb	r3, [r7, #3]
 607:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 608:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 609:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 610:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 946              		.loc 1 610 0
 947 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 948 000e 002B     		cmp	r3, #0
 949 0010 08D0     		beq	.L38
 611:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 612:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI SS output */
 613:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= CR2_SSOE_Set;
 950              		.loc 1 613 0
 951 0012 7B68     		ldr	r3, [r7, #4]
 952 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 953 0016 9BB2     		uxth	r3, r3
 954 0018 43F00403 		orr	r3, r3, #4
 955 001c 9AB2     		uxth	r2, r3
 956 001e 7B68     		ldr	r3, [r7, #4]
 957 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 958 0022 07E0     		b	.L37
 959              	.L38:
 614:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 615:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 616:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 617:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI SS output */
 618:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= CR2_SSOE_Reset;
 960              		.loc 1 618 0
 961 0024 7B68     		ldr	r3, [r7, #4]
 962 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 963 0028 9BB2     		uxth	r3, r3
 964 002a 23F00403 		bic	r3, r3, #4
 965 002e 9AB2     		uxth	r2, r3
 966 0030 7B68     		ldr	r3, [r7, #4]
 967 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 968              	.L37:
 619:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 620:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 969              		.loc 1 620 0
 970 0034 0C37     		adds	r7, r7, #12
 971 0036 BD46     		mov	sp, r7
 972              		@ sp needed
 973 0038 5DF8047B 		ldr	r7, [sp], #4
 974 003c 7047     		bx	lr
 975              		.cfi_endproc
 976              	.LFE68:
 978 003e 00BF     		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 979              		.align	2
 980              		.global	SPI_DataSizeConfig
 981              		.thumb
 982              		.thumb_func
 984              	SPI_DataSizeConfig:
 985              	.LFB69:
 621:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 622:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 623:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Configures the data size for the selected SPI.
 624:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 625:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 626:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 627:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_16b: Set data frame format to 16bit
 628:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_8b: Set data frame format to 8bit
 629:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 630:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 631:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 632:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 986              		.loc 1 632 0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 8
 989              		@ frame_needed = 1, uses_anonymous_args = 0
 990              		@ link register save eliminated.
 991 0000 80B4     		push	{r7}
 992              		.cfi_def_cfa_offset 4
 993              		.cfi_offset 7, -4
 994 0002 83B0     		sub	sp, sp, #12
 995              		.cfi_def_cfa_offset 16
 996 0004 00AF     		add	r7, sp, #0
 997              		.cfi_def_cfa_register 7
 998 0006 7860     		str	r0, [r7, #4]
 999 0008 0B46     		mov	r3, r1
 1000 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 633:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 634:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 635:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 636:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear DFF bit */
 637:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 1001              		.loc 1 637 0
 1002 000c 7B68     		ldr	r3, [r7, #4]
 1003 000e 1B88     		ldrh	r3, [r3]	@ movhi
 1004 0010 9BB2     		uxth	r3, r3
 1005 0012 23F40063 		bic	r3, r3, #2048
 1006 0016 9AB2     		uxth	r2, r3
 1007 0018 7B68     		ldr	r3, [r7, #4]
 1008 001a 1A80     		strh	r2, [r3]	@ movhi
 638:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set new DFF bit value */
 639:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 1009              		.loc 1 639 0
 1010 001c 7B68     		ldr	r3, [r7, #4]
 1011 001e 1B88     		ldrh	r3, [r3]	@ movhi
 1012 0020 9AB2     		uxth	r2, r3
 1013 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1014 0024 1343     		orrs	r3, r3, r2
 1015 0026 9AB2     		uxth	r2, r3
 1016 0028 7B68     		ldr	r3, [r7, #4]
 1017 002a 1A80     		strh	r2, [r3]	@ movhi
 640:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1018              		.loc 1 640 0
 1019 002c 0C37     		adds	r7, r7, #12
 1020 002e BD46     		mov	sp, r7
 1021              		@ sp needed
 1022 0030 5DF8047B 		ldr	r7, [sp], #4
 1023 0034 7047     		bx	lr
 1024              		.cfi_endproc
 1025              	.LFE69:
 1027 0036 00BF     		.section	.text.SPI_TransmitCRC,"ax",%progbits
 1028              		.align	2
 1029              		.global	SPI_TransmitCRC
 1030              		.thumb
 1031              		.thumb_func
 1033              	SPI_TransmitCRC:
 1034              	.LFB70:
 641:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 642:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 643:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Transmit the SPIx CRC value.
 644:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 645:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 646:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 647:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 648:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1035              		.loc 1 648 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 8
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
 1040 0000 80B4     		push	{r7}
 1041              		.cfi_def_cfa_offset 4
 1042              		.cfi_offset 7, -4
 1043 0002 83B0     		sub	sp, sp, #12
 1044              		.cfi_def_cfa_offset 16
 1045 0004 00AF     		add	r7, sp, #0
 1046              		.cfi_def_cfa_register 7
 1047 0006 7860     		str	r0, [r7, #4]
 649:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 650:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 651:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 652:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Enable the selected SPI CRC transmission */
 653:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 |= CR1_CRCNext_Set;
 1048              		.loc 1 653 0
 1049 0008 7B68     		ldr	r3, [r7, #4]
 1050 000a 1B88     		ldrh	r3, [r3]	@ movhi
 1051 000c 9BB2     		uxth	r3, r3
 1052 000e 43F48053 		orr	r3, r3, #4096
 1053 0012 9AB2     		uxth	r2, r3
 1054 0014 7B68     		ldr	r3, [r7, #4]
 1055 0016 1A80     		strh	r2, [r3]	@ movhi
 654:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1056              		.loc 1 654 0
 1057 0018 0C37     		adds	r7, r7, #12
 1058 001a BD46     		mov	sp, r7
 1059              		@ sp needed
 1060 001c 5DF8047B 		ldr	r7, [sp], #4
 1061 0020 7047     		bx	lr
 1062              		.cfi_endproc
 1063              	.LFE70:
 1065 0022 00BF     		.section	.text.SPI_CalculateCRC,"ax",%progbits
 1066              		.align	2
 1067              		.global	SPI_CalculateCRC
 1068              		.thumb
 1069              		.thumb_func
 1071              	SPI_CalculateCRC:
 1072              	.LFB71:
 655:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 656:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 657:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 658:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 659:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 660:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 661:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 662:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 663:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 664:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1073              		.loc 1 664 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 8
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077              		@ link register save eliminated.
 1078 0000 80B4     		push	{r7}
 1079              		.cfi_def_cfa_offset 4
 1080              		.cfi_offset 7, -4
 1081 0002 83B0     		sub	sp, sp, #12
 1082              		.cfi_def_cfa_offset 16
 1083 0004 00AF     		add	r7, sp, #0
 1084              		.cfi_def_cfa_register 7
 1085 0006 7860     		str	r0, [r7, #4]
 1086 0008 0B46     		mov	r3, r1
 1087 000a FB70     		strb	r3, [r7, #3]
 665:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 666:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 667:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 668:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 1088              		.loc 1 668 0
 1089 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1090 000e 002B     		cmp	r3, #0
 1091 0010 08D0     		beq	.L43
 669:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 670:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI CRC calculation */
 671:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_CRCEN_Set;
 1092              		.loc 1 671 0
 1093 0012 7B68     		ldr	r3, [r7, #4]
 1094 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1095 0016 9BB2     		uxth	r3, r3
 1096 0018 43F40053 		orr	r3, r3, #8192
 1097 001c 9AB2     		uxth	r2, r3
 1098 001e 7B68     		ldr	r3, [r7, #4]
 1099 0020 1A80     		strh	r2, [r3]	@ movhi
 1100 0022 07E0     		b	.L42
 1101              	.L43:
 672:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 673:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 674:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 675:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI CRC calculation */
 676:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_CRCEN_Reset;
 1102              		.loc 1 676 0
 1103 0024 7B68     		ldr	r3, [r7, #4]
 1104 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1105 0028 9BB2     		uxth	r3, r3
 1106 002a 23F40053 		bic	r3, r3, #8192
 1107 002e 9AB2     		uxth	r2, r3
 1108 0030 7B68     		ldr	r3, [r7, #4]
 1109 0032 1A80     		strh	r2, [r3]	@ movhi
 1110              	.L42:
 677:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 678:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1111              		.loc 1 678 0
 1112 0034 0C37     		adds	r7, r7, #12
 1113 0036 BD46     		mov	sp, r7
 1114              		@ sp needed
 1115 0038 5DF8047B 		ldr	r7, [sp], #4
 1116 003c 7047     		bx	lr
 1117              		.cfi_endproc
 1118              	.LFE71:
 1120 003e 00BF     		.section	.text.SPI_GetCRC,"ax",%progbits
 1121              		.align	2
 1122              		.global	SPI_GetCRC
 1123              		.thumb
 1124              		.thumb_func
 1126              	SPI_GetCRC:
 1127              	.LFB72:
 679:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 680:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 681:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 682:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 683:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 684:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 685:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Tx: Selects Tx CRC register
 686:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Rx: Selects Rx CRC register
 687:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The selected CRC register value..
 688:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 689:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 690:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1128              		.loc 1 690 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 16
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133 0000 80B4     		push	{r7}
 1134              		.cfi_def_cfa_offset 4
 1135              		.cfi_offset 7, -4
 1136 0002 85B0     		sub	sp, sp, #20
 1137              		.cfi_def_cfa_offset 24
 1138 0004 00AF     		add	r7, sp, #0
 1139              		.cfi_def_cfa_register 7
 1140 0006 7860     		str	r0, [r7, #4]
 1141 0008 0B46     		mov	r3, r1
 1142 000a FB70     		strb	r3, [r7, #3]
 691:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t crcreg = 0;
 1143              		.loc 1 691 0
 1144 000c 0023     		movs	r3, #0
 1145 000e FB81     		strh	r3, [r7, #14]	@ movhi
 692:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 693:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 694:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 695:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 1146              		.loc 1 695 0
 1147 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1148 0012 012B     		cmp	r3, #1
 1149 0014 03D0     		beq	.L46
 696:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 697:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Tx CRC register */
 698:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     crcreg = SPIx->TXCRCR;
 1150              		.loc 1 698 0
 1151 0016 7B68     		ldr	r3, [r7, #4]
 1152 0018 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1153 001a FB81     		strh	r3, [r7, #14]	@ movhi
 1154 001c 02E0     		b	.L47
 1155              	.L46:
 699:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 700:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 701:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 702:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Rx CRC register */
 703:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     crcreg = SPIx->RXCRCR;
 1156              		.loc 1 703 0
 1157 001e 7B68     		ldr	r3, [r7, #4]
 1158 0020 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1159 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 1160              	.L47:
 704:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 705:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the selected CRC register */
 706:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return crcreg;
 1161              		.loc 1 706 0
 1162 0024 FB89     		ldrh	r3, [r7, #14]
 707:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1163              		.loc 1 707 0
 1164 0026 1846     		mov	r0, r3
 1165 0028 1437     		adds	r7, r7, #20
 1166 002a BD46     		mov	sp, r7
 1167              		@ sp needed
 1168 002c 5DF8047B 		ldr	r7, [sp], #4
 1169 0030 7047     		bx	lr
 1170              		.cfi_endproc
 1171              	.LFE72:
 1173 0032 00BF     		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 1174              		.align	2
 1175              		.global	SPI_GetCRCPolynomial
 1176              		.thumb
 1177              		.thumb_func
 1179              	SPI_GetCRCPolynomial:
 1180              	.LFB73:
 708:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 709:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 710:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 711:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 712:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The CRC Polynomial register value.
 713:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 714:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 715:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1181              		.loc 1 715 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 8
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185              		@ link register save eliminated.
 1186 0000 80B4     		push	{r7}
 1187              		.cfi_def_cfa_offset 4
 1188              		.cfi_offset 7, -4
 1189 0002 83B0     		sub	sp, sp, #12
 1190              		.cfi_def_cfa_offset 16
 1191 0004 00AF     		add	r7, sp, #0
 1192              		.cfi_def_cfa_register 7
 1193 0006 7860     		str	r0, [r7, #4]
 716:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 717:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 718:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 719:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the CRC polynomial register */
 720:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return SPIx->CRCPR;
 1194              		.loc 1 720 0
 1195 0008 7B68     		ldr	r3, [r7, #4]
 1196 000a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1197 000c 9BB2     		uxth	r3, r3
 721:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1198              		.loc 1 721 0
 1199 000e 1846     		mov	r0, r3
 1200 0010 0C37     		adds	r7, r7, #12
 1201 0012 BD46     		mov	sp, r7
 1202              		@ sp needed
 1203 0014 5DF8047B 		ldr	r7, [sp], #4
 1204 0018 7047     		bx	lr
 1205              		.cfi_endproc
 1206              	.LFE73:
 1208 001a 00BF     		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 1209              		.align	2
 1210              		.global	SPI_BiDirectionalLineConfig
 1211              		.thumb
 1212              		.thumb_func
 1214              	SPI_BiDirectionalLineConfig:
 1215              	.LFB74:
 722:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 723:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 724:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Selects the data transfer direction in bi-directional mode for the specified SPI.
 725:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 726:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bi-directional mode. 
 727:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 728:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Tx: Selects Tx transmission direction
 729:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Rx: Selects Rx receive direction
 730:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 731:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 732:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 733:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1216              		.loc 1 733 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 8
 1219              		@ frame_needed = 1, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 1221 0000 80B4     		push	{r7}
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 7, -4
 1224 0002 83B0     		sub	sp, sp, #12
 1225              		.cfi_def_cfa_offset 16
 1226 0004 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
 1228 0006 7860     		str	r0, [r7, #4]
 1229 0008 0B46     		mov	r3, r1
 1230 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 734:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 735:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 736:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 737:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 1231              		.loc 1 737 0
 1232 000c 7B88     		ldrh	r3, [r7, #2]
 1233 000e B3F5804F 		cmp	r3, #16384
 1234 0012 08D1     		bne	.L52
 738:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 739:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the Tx only mode */
 740:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 1235              		.loc 1 740 0
 1236 0014 7B68     		ldr	r3, [r7, #4]
 1237 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1238 0018 9BB2     		uxth	r3, r3
 1239 001a 43F48043 		orr	r3, r3, #16384
 1240 001e 9AB2     		uxth	r2, r3
 1241 0020 7B68     		ldr	r3, [r7, #4]
 1242 0022 1A80     		strh	r2, [r3]	@ movhi
 1243 0024 07E0     		b	.L51
 1244              	.L52:
 741:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 742:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 743:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 744:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the Rx only mode */
 745:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 1245              		.loc 1 745 0
 1246 0026 7B68     		ldr	r3, [r7, #4]
 1247 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1248 002a 9BB2     		uxth	r3, r3
 1249 002c 23F48043 		bic	r3, r3, #16384
 1250 0030 9AB2     		uxth	r2, r3
 1251 0032 7B68     		ldr	r3, [r7, #4]
 1252 0034 1A80     		strh	r2, [r3]	@ movhi
 1253              	.L51:
 746:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 747:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1254              		.loc 1 747 0
 1255 0036 0C37     		adds	r7, r7, #12
 1256 0038 BD46     		mov	sp, r7
 1257              		@ sp needed
 1258 003a 5DF8047B 		ldr	r7, [sp], #4
 1259 003e 7047     		bx	lr
 1260              		.cfi_endproc
 1261              	.LFE74:
 1263              		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 1264              		.align	2
 1265              		.global	SPI_I2S_GetFlagStatus
 1266              		.thumb
 1267              		.thumb_func
 1269              	SPI_I2S_GetFlagStatus:
 1270              	.LFB75:
 748:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 749:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 750:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S flag is set or not.
 751:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 752:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 753:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 754:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI/I2S flag to check. 
 755:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 756:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
 757:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
 758:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_BSY: Busy flag.
 759:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_OVR: Overrun flag.
 760:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_MODF: Mode Fault flag.
 761:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_CRCERR: CRC Error flag.
 762:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_UDR: Underrun Error flag.
 763:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_CHSIDE: Channel Side flag.
 764:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
 765:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 766:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 767:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1271              		.loc 1 767 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 16
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275              		@ link register save eliminated.
 1276 0000 80B4     		push	{r7}
 1277              		.cfi_def_cfa_offset 4
 1278              		.cfi_offset 7, -4
 1279 0002 85B0     		sub	sp, sp, #20
 1280              		.cfi_def_cfa_offset 24
 1281 0004 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 1283 0006 7860     		str	r0, [r7, #4]
 1284 0008 0B46     		mov	r3, r1
 1285 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 768:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   FlagStatus bitstatus = RESET;
 1286              		.loc 1 768 0
 1287 000c 0023     		movs	r3, #0
 1288 000e FB73     		strb	r3, [r7, #15]
 769:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 770:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 771:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 772:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S flag */
 773:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 1289              		.loc 1 773 0
 1290 0010 7B68     		ldr	r3, [r7, #4]
 1291 0012 1B89     		ldrh	r3, [r3, #8]	@ movhi
 1292 0014 9AB2     		uxth	r2, r3
 1293 0016 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1294 0018 1340     		ands	r3, r3, r2
 1295 001a 9BB2     		uxth	r3, r3
 1296 001c 002B     		cmp	r3, #0
 1297 001e 02D0     		beq	.L55
 774:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 775:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is set */
 776:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = SET;
 1298              		.loc 1 776 0
 1299 0020 0123     		movs	r3, #1
 1300 0022 FB73     		strb	r3, [r7, #15]
 1301 0024 01E0     		b	.L56
 1302              	.L55:
 777:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 778:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 779:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 780:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is reset */
 781:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 1303              		.loc 1 781 0
 1304 0026 0023     		movs	r3, #0
 1305 0028 FB73     		strb	r3, [r7, #15]
 1306              	.L56:
 782:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 783:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_FLAG status */
 784:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return  bitstatus;
 1307              		.loc 1 784 0
 1308 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 785:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1309              		.loc 1 785 0
 1310 002c 1846     		mov	r0, r3
 1311 002e 1437     		adds	r7, r7, #20
 1312 0030 BD46     		mov	sp, r7
 1313              		@ sp needed
 1314 0032 5DF8047B 		ldr	r7, [sp], #4
 1315 0036 7047     		bx	lr
 1316              		.cfi_endproc
 1317              	.LFE75:
 1319              		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 1320              		.align	2
 1321              		.global	SPI_I2S_ClearFlag
 1322              		.thumb
 1323              		.thumb_func
 1325              	SPI_I2S_ClearFlag:
 1326              	.LFB76:
 786:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 787:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 788:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
 789:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 790:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 791:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
 792:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR flag.
 793:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 794:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - OVR (OverRun error) flag is cleared by software sequence: a read 
 795:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
 796:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
 797:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun error) flag is cleared by a read operation to 
 798:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     SPI_SR register (SPI_I2S_GetFlagStatus()).
 799:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) flag is cleared by software sequence: a read/write 
 800:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
 801:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
 802:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 803:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 804:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 805:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1327              		.loc 1 805 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 8
 1330              		@ frame_needed = 1, uses_anonymous_args = 0
 1331              		@ link register save eliminated.
 1332 0000 80B4     		push	{r7}
 1333              		.cfi_def_cfa_offset 4
 1334              		.cfi_offset 7, -4
 1335 0002 83B0     		sub	sp, sp, #12
 1336              		.cfi_def_cfa_offset 16
 1337 0004 00AF     		add	r7, sp, #0
 1338              		.cfi_def_cfa_register 7
 1339 0006 7860     		str	r0, [r7, #4]
 1340 0008 0B46     		mov	r3, r1
 1341 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 806:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 807:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 808:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 809:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     
 810:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Clear the selected SPI CRC Error (CRCERR) flag */
 811:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 1342              		.loc 1 811 0
 1343 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1344 000e DB43     		mvns	r3, r3
 1345 0010 9AB2     		uxth	r2, r3
 1346 0012 7B68     		ldr	r3, [r7, #4]
 1347 0014 1A81     		strh	r2, [r3, #8]	@ movhi
 812:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1348              		.loc 1 812 0
 1349 0016 0C37     		adds	r7, r7, #12
 1350 0018 BD46     		mov	sp, r7
 1351              		@ sp needed
 1352 001a 5DF8047B 		ldr	r7, [sp], #4
 1353 001e 7047     		bx	lr
 1354              		.cfi_endproc
 1355              	.LFE76:
 1357              		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 1358              		.align	2
 1359              		.global	SPI_I2S_GetITStatus
 1360              		.thumb
 1361              		.thumb_func
 1363              	SPI_I2S_GetITStatus:
 1364              	.LFB77:
 813:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 814:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 815:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S interrupt has occurred or not.
 816:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 817:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 818:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 819:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to check. 
 820:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 821:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
 822:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
 823:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_OVR: Overrun interrupt.
 824:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_MODF: Mode Fault interrupt.
 825:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_CRCERR: CRC Error interrupt.
 826:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_IT_UDR: Underrun Error interrupt.
 827:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
 828:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 829:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 830:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1365              		.loc 1 830 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 16
 1368              		@ frame_needed = 1, uses_anonymous_args = 0
 1369              		@ link register save eliminated.
 1370 0000 80B4     		push	{r7}
 1371              		.cfi_def_cfa_offset 4
 1372              		.cfi_offset 7, -4
 1373 0002 85B0     		sub	sp, sp, #20
 1374              		.cfi_def_cfa_offset 24
 1375 0004 00AF     		add	r7, sp, #0
 1376              		.cfi_def_cfa_register 7
 1377 0006 7860     		str	r0, [r7, #4]
 1378 0008 0B46     		mov	r3, r1
 1379 000a FB70     		strb	r3, [r7, #3]
 831:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ITStatus bitstatus = RESET;
 1380              		.loc 1 831 0
 1381 000c 0023     		movs	r3, #0
 1382 000e FB73     		strb	r3, [r7, #15]
 832:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
 1383              		.loc 1 832 0
 1384 0010 0023     		movs	r3, #0
 1385 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 1386 0014 0023     		movs	r3, #0
 1387 0016 7B81     		strh	r3, [r7, #10]	@ movhi
 1388 0018 0023     		movs	r3, #0
 1389 001a 3B81     		strh	r3, [r7, #8]	@ movhi
 833:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 834:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 835:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 836:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 837:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 838:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 839:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 1390              		.loc 1 839 0
 1391 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1392 001e 03F00F03 		and	r3, r3, #15
 1393 0022 0122     		movs	r2, #1
 1394 0024 02FA03F3 		lsl	r3, r2, r3
 1395 0028 BB81     		strh	r3, [r7, #12]	@ movhi
 840:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 841:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT mask */
 842:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = SPI_I2S_IT >> 4;
 1396              		.loc 1 842 0
 1397 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1398 002c 1B09     		lsrs	r3, r3, #4
 1399 002e DBB2     		uxtb	r3, r3
 1400 0030 7B81     		strh	r3, [r7, #10]	@ movhi
 843:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 844:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 845:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = 0x01 << itmask;
 1401              		.loc 1 845 0
 1402 0032 7B89     		ldrh	r3, [r7, #10]
 1403 0034 0122     		movs	r2, #1
 1404 0036 02FA03F3 		lsl	r3, r2, r3
 1405 003a 7B81     		strh	r3, [r7, #10]	@ movhi
 846:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 847:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
 848:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 1406              		.loc 1 848 0
 1407 003c 7B68     		ldr	r3, [r7, #4]
 1408 003e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1409 0040 9AB2     		uxth	r2, r3
 1410 0042 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1411 0044 1340     		ands	r3, r3, r2
 1412 0046 3B81     		strh	r3, [r7, #8]	@ movhi
 849:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 850:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S interrupt */
 851:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 1413              		.loc 1 851 0
 1414 0048 7B68     		ldr	r3, [r7, #4]
 1415 004a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 1416 004c 9AB2     		uxth	r2, r3
 1417 004e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1418 0050 1340     		ands	r3, r3, r2
 1419 0052 9BB2     		uxth	r3, r3
 1420 0054 002B     		cmp	r3, #0
 1421 0056 05D0     		beq	.L60
 1422              		.loc 1 851 0 is_stmt 0 discriminator 1
 1423 0058 3B89     		ldrh	r3, [r7, #8]
 1424 005a 002B     		cmp	r3, #0
 1425 005c 02D0     		beq	.L60
 852:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 853:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is set */
 854:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = SET;
 1426              		.loc 1 854 0 is_stmt 1
 1427 005e 0123     		movs	r3, #1
 1428 0060 FB73     		strb	r3, [r7, #15]
 1429 0062 01E0     		b	.L61
 1430              	.L60:
 855:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 856:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 857:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 858:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is reset */
 859:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 1431              		.loc 1 859 0
 1432 0064 0023     		movs	r3, #0
 1433 0066 FB73     		strb	r3, [r7, #15]
 1434              	.L61:
 860:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 861:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_IT status */
 862:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return bitstatus;
 1435              		.loc 1 862 0
 1436 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 863:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1437              		.loc 1 863 0
 1438 006a 1846     		mov	r0, r3
 1439 006c 1437     		adds	r7, r7, #20
 1440 006e BD46     		mov	sp, r7
 1441              		@ sp needed
 1442 0070 5DF8047B 		ldr	r7, [sp], #4
 1443 0074 7047     		bx	lr
 1444              		.cfi_endproc
 1445              	.LFE77:
 1447 0076 00BF     		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 1448              		.align	2
 1449              		.global	SPI_I2S_ClearITPendingBit
 1450              		.thumb
 1451              		.thumb_func
 1453              	SPI_I2S_ClearITPendingBit:
 1454              	.LFB78:
 864:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 865:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 866:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
 867:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 868:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 869:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
 870:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR interrupt pending bit.   
 871:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 872:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - OVR (OverRun Error) interrupt pending bit is cleared by software 
 873:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
 874:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
 875:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun Error) interrupt pending bit is cleared by a read 
 876:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetITStatus()).
 877:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
 878:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
 879:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
 880:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     the SPI).
 881:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 882:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 883:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 884:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1455              		.loc 1 884 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 16
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459              		@ link register save eliminated.
 1460 0000 80B4     		push	{r7}
 1461              		.cfi_def_cfa_offset 4
 1462              		.cfi_offset 7, -4
 1463 0002 85B0     		sub	sp, sp, #20
 1464              		.cfi_def_cfa_offset 24
 1465 0004 00AF     		add	r7, sp, #0
 1466              		.cfi_def_cfa_register 7
 1467 0006 7860     		str	r0, [r7, #4]
 1468 0008 0B46     		mov	r3, r1
 1469 000a FB70     		strb	r3, [r7, #3]
 885:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0;
 1470              		.loc 1 885 0
 1471 000c 0023     		movs	r3, #0
 1472 000e FB81     		strh	r3, [r7, #14]	@ movhi
 886:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 887:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 888:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
 889:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 890:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI IT index */
 891:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 1473              		.loc 1 891 0
 1474 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1475 0012 03F00F03 		and	r3, r3, #15
 1476 0016 0122     		movs	r2, #1
 1477 0018 02FA03F3 		lsl	r3, r2, r3
 1478 001c FB81     		strh	r3, [r7, #14]	@ movhi
 892:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 893:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
 894:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 1479              		.loc 1 894 0
 1480 001e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1481 0020 DB43     		mvns	r3, r3
 1482 0022 9AB2     		uxth	r2, r3
 1483 0024 7B68     		ldr	r3, [r7, #4]
 1484 0026 1A81     		strh	r2, [r3, #8]	@ movhi
 895:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1485              		.loc 1 895 0
 1486 0028 1437     		adds	r7, r7, #20
 1487 002a BD46     		mov	sp, r7
 1488              		@ sp needed
 1489 002c 5DF8047B 		ldr	r7, [sp], #4
 1490 0030 7047     		bx	lr
 1491              		.cfi_endproc
 1492              	.LFE78:
 1494 0032 00BF     		.text
 1495              	.Letext0:
 1496              		.file 2 "c:\\program files (x86)\\mentorgraphics\\sourcery_codebench_lite_for_arm_eabi\\arm-none-e
 1497              		.file 3 "D:\\workspace\\rfm12\\stm32_std\\CMSIS\\CM3\\DeviceSupport\\ST\\STM32F10x/stm32f10x.h"
 1498              		.file 4 "D:\\workspace\\rfm12\\stm32_std\\STM32F10x_StdPeriph_Driver\\inc/stm32f10x_rcc.h"
 1499              		.file 5 "D:\\workspace\\rfm12\\stm32_std\\STM32F10x_StdPeriph_Driver\\inc/stm32f10x_spi.h"
 1500              		.file 6 "D:\\workspace\\rfm12\\stm32_std\\CMSIS\\CM3\\CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_spi.c
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:19     .text.SPI_I2S_DeInit:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:24     .text.SPI_I2S_DeInit:00000000 SPI_I2S_DeInit
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:96     .text.SPI_Init:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:101    .text.SPI_Init:00000000 SPI_Init
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:201    .text.I2S_Init:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:206    .text.I2S_Init:00000000 I2S_Init
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:430    .text.SPI_StructInit:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:435    .text.SPI_StructInit:00000000 SPI_StructInit
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:496    .text.I2S_StructInit:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:501    .text.I2S_StructInit:00000000 I2S_StructInit
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:550    .text.SPI_Cmd:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:555    .text.SPI_Cmd:00000000 SPI_Cmd
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:605    .text.I2S_Cmd:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:610    .text.I2S_Cmd:00000000 I2S_Cmd
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:660    .text.SPI_I2S_ITConfig:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:665    .text.SPI_I2S_ITConfig:00000000 SPI_I2S_ITConfig
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:736    .text.SPI_I2S_DMACmd:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:741    .text.SPI_I2S_DMACmd:00000000 SPI_I2S_DMACmd
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:797    .text.SPI_I2S_SendData:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:802    .text.SPI_I2S_SendData:00000000 SPI_I2S_SendData
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:833    .text.SPI_I2S_ReceiveData:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:838    .text.SPI_I2S_ReceiveData:00000000 SPI_I2S_ReceiveData
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:868    .text.SPI_NSSInternalSoftwareConfig:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:873    .text.SPI_NSSInternalSoftwareConfig:00000000 SPI_NSSInternalSoftwareConfig
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:924    .text.SPI_SSOutputCmd:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:929    .text.SPI_SSOutputCmd:00000000 SPI_SSOutputCmd
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:979    .text.SPI_DataSizeConfig:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:984    .text.SPI_DataSizeConfig:00000000 SPI_DataSizeConfig
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1028   .text.SPI_TransmitCRC:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1033   .text.SPI_TransmitCRC:00000000 SPI_TransmitCRC
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1066   .text.SPI_CalculateCRC:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1071   .text.SPI_CalculateCRC:00000000 SPI_CalculateCRC
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1121   .text.SPI_GetCRC:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1126   .text.SPI_GetCRC:00000000 SPI_GetCRC
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1174   .text.SPI_GetCRCPolynomial:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1179   .text.SPI_GetCRCPolynomial:00000000 SPI_GetCRCPolynomial
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1209   .text.SPI_BiDirectionalLineConfig:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1214   .text.SPI_BiDirectionalLineConfig:00000000 SPI_BiDirectionalLineConfig
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1264   .text.SPI_I2S_GetFlagStatus:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1269   .text.SPI_I2S_GetFlagStatus:00000000 SPI_I2S_GetFlagStatus
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1320   .text.SPI_I2S_ClearFlag:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1325   .text.SPI_I2S_ClearFlag:00000000 SPI_I2S_ClearFlag
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1358   .text.SPI_I2S_GetITStatus:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1363   .text.SPI_I2S_GetITStatus:00000000 SPI_I2S_GetITStatus
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1448   .text.SPI_I2S_ClearITPendingBit:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccscbFiX.s:1453   .text.SPI_I2S_ClearITPendingBit:00000000 SPI_I2S_ClearITPendingBit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.69ef232822fae12fd5bc55108b75a1e4
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.47.c45d264953076019d6b3b1c20e8ad771
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm3.h.144.f4158be2ca5a330459fef4214a4bb0f1
                           .group:00000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:00000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922
                           .group:00000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:00000000 wm4.stm32f10x_can.h.25.48aab46fcce6d08400bf960b028e4698
                           .group:00000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:00000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:00000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:00000000 wm4.stm32f10x_exti.h.25.b9064155c5c006b5154b39788c79001a
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_i2c.h.25.7b6cbaea24c6f25f538f8516d1814cb2
                           .group:00000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:00000000 wm4.stm32f10x_sdio.h.25.1fb5280a7690ef99070096bf8c866b3a
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_spi.h.117.5885fcde8f507e1811a76c071013c0c7

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
