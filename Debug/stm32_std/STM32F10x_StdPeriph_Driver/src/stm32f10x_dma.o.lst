   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_dma.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.DMA_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	DMA_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	DMA_DeInit:
  25              	.LFB56:
  26              		.file 1 "../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c"
   1:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
   2:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   ******************************************************************************
   3:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @file    stm32f10x_dma.c
   4:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @author  MCD Application Team
   5:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @version V3.5.0
   6:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @date    11-March-2011
   7:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief   This file provides all the DMA firmware functions.
   8:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   ******************************************************************************
   9:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @attention
  10:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *
  11:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *
  18:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   ******************************************************************************
  20:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  21:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  22:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /* Includes ------------------------------------------------------------------*/
  23:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #include "stm32f10x_dma.h"
  24:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #include "stm32f10x_rcc.h"
  25:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  26:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @{
  28:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  29:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  30:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /** @defgroup DMA 
  31:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief DMA driver modules
  32:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @{
  33:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */ 
  34:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  35:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_TypesDefinitions
  36:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @{
  37:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */ 
  38:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
  39:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @}
  40:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  41:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  42:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Defines
  43:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @{
  44:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  45:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  46:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  47:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /* DMA1 Channelx interrupt pending bit masks */
  48:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA1_Channel1_IT_Mask    ((uint32_t)(DMA_ISR_GIF1 | DMA_ISR_TCIF1 | DMA_ISR_HTIF1 | DMA_ISR
  49:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA1_Channel2_IT_Mask    ((uint32_t)(DMA_ISR_GIF2 | DMA_ISR_TCIF2 | DMA_ISR_HTIF2 | DMA_ISR
  50:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA1_Channel3_IT_Mask    ((uint32_t)(DMA_ISR_GIF3 | DMA_ISR_TCIF3 | DMA_ISR_HTIF3 | DMA_ISR
  51:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA1_Channel4_IT_Mask    ((uint32_t)(DMA_ISR_GIF4 | DMA_ISR_TCIF4 | DMA_ISR_HTIF4 | DMA_ISR
  52:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA1_Channel5_IT_Mask    ((uint32_t)(DMA_ISR_GIF5 | DMA_ISR_TCIF5 | DMA_ISR_HTIF5 | DMA_ISR
  53:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA1_Channel6_IT_Mask    ((uint32_t)(DMA_ISR_GIF6 | DMA_ISR_TCIF6 | DMA_ISR_HTIF6 | DMA_ISR
  54:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA1_Channel7_IT_Mask    ((uint32_t)(DMA_ISR_GIF7 | DMA_ISR_TCIF7 | DMA_ISR_HTIF7 | DMA_ISR
  55:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  56:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /* DMA2 Channelx interrupt pending bit masks */
  57:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA2_Channel1_IT_Mask    ((uint32_t)(DMA_ISR_GIF1 | DMA_ISR_TCIF1 | DMA_ISR_HTIF1 | DMA_ISR
  58:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA2_Channel2_IT_Mask    ((uint32_t)(DMA_ISR_GIF2 | DMA_ISR_TCIF2 | DMA_ISR_HTIF2 | DMA_ISR
  59:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA2_Channel3_IT_Mask    ((uint32_t)(DMA_ISR_GIF3 | DMA_ISR_TCIF3 | DMA_ISR_HTIF3 | DMA_ISR
  60:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA2_Channel4_IT_Mask    ((uint32_t)(DMA_ISR_GIF4 | DMA_ISR_TCIF4 | DMA_ISR_HTIF4 | DMA_ISR
  61:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define DMA2_Channel5_IT_Mask    ((uint32_t)(DMA_ISR_GIF5 | DMA_ISR_TCIF5 | DMA_ISR_HTIF5 | DMA_ISR
  62:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  63:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /* DMA2 FLAG mask */
  64:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define FLAG_Mask                ((uint32_t)0x10000000)
  65:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  66:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /* DMA registers Masks */
  67:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** #define CCR_CLEAR_Mask           ((uint32_t)0xFFFF800F)
  68:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  69:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
  70:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @}
  71:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  72:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  73:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Macros
  74:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @{
  75:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  76:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  77:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
  78:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @}
  79:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  80:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  81:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Variables
  82:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @{
  83:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  84:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  85:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
  86:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @}
  87:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  88:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  89:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_FunctionPrototypes
  90:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @{
  91:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  92:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  93:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
  94:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @}
  95:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
  96:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
  97:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Functions
  98:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @{
  99:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 100:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 101:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 102:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Deinitializes the DMAy Channelx registers to their default reset
 103:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *         values.
 104:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and
 105:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 106:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval None
 107:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 108:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** void DMA_DeInit(DMA_Channel_TypeDef* DMAy_Channelx)
 109:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
  27              		.loc 1 109 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 110:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 111:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 112:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   
 113:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Disable the selected DMAy Channelx */
 114:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR1_EN);
  40              		.loc 1 114 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 1A68     		ldr	r2, [r3]
  43 000c 4FF6FE73 		movw	r3, #65534
  44 0010 1340     		ands	r3, r3, r2
  45 0012 7A68     		ldr	r2, [r7, #4]
  46 0014 1360     		str	r3, [r2]
 115:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   
 116:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx control register */
 117:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR  = 0;
  47              		.loc 1 117 0
  48 0016 7B68     		ldr	r3, [r7, #4]
  49 0018 0022     		movs	r2, #0
  50 001a 1A60     		str	r2, [r3]
 118:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   
 119:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx remaining bytes register */
 120:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = 0;
  51              		.loc 1 120 0
  52 001c 7B68     		ldr	r3, [r7, #4]
  53 001e 0022     		movs	r2, #0
  54 0020 5A60     		str	r2, [r3, #4]
 121:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   
 122:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx peripheral address register */
 123:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CPAR  = 0;
  55              		.loc 1 123 0
  56 0022 7B68     		ldr	r3, [r7, #4]
  57 0024 0022     		movs	r2, #0
  58 0026 9A60     		str	r2, [r3, #8]
 124:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   
 125:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx memory address register */
 126:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CMAR = 0;
  59              		.loc 1 126 0
  60 0028 7B68     		ldr	r3, [r7, #4]
  61 002a 0022     		movs	r2, #0
  62 002c DA60     		str	r2, [r3, #12]
 127:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   
 128:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   if (DMAy_Channelx == DMA1_Channel1)
  63              		.loc 1 128 0
  64 002e 7A68     		ldr	r2, [r7, #4]
  65 0030 0823     		movs	r3, #8
  66 0032 C4F20203 		movt	r3, 16386
  67 0036 9A42     		cmp	r2, r3
  68 0038 0AD1     		bne	.L2
 129:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 130:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel1 */
 131:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel1_IT_Mask;
  69              		.loc 1 131 0
  70 003a 0023     		movs	r3, #0
  71 003c C4F20203 		movt	r3, 16386
  72 0040 0022     		movs	r2, #0
  73 0042 C4F20202 		movt	r2, 16386
  74 0046 5268     		ldr	r2, [r2, #4]
  75 0048 42F00F02 		orr	r2, r2, #15
  76 004c 5A60     		str	r2, [r3, #4]
  77 004e C8E0     		b	.L1
  78              	.L2:
 132:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 133:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel2)
  79              		.loc 1 133 0
  80 0050 7A68     		ldr	r2, [r7, #4]
  81 0052 1C23     		movs	r3, #28
  82 0054 C4F20203 		movt	r3, 16386
  83 0058 9A42     		cmp	r2, r3
  84 005a 0AD1     		bne	.L4
 134:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 135:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel2 */
 136:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel2_IT_Mask;
  85              		.loc 1 136 0
  86 005c 0023     		movs	r3, #0
  87 005e C4F20203 		movt	r3, 16386
  88 0062 0022     		movs	r2, #0
  89 0064 C4F20202 		movt	r2, 16386
  90 0068 5268     		ldr	r2, [r2, #4]
  91 006a 42F0F002 		orr	r2, r2, #240
  92 006e 5A60     		str	r2, [r3, #4]
  93 0070 B7E0     		b	.L1
  94              	.L4:
 137:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 138:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel3)
  95              		.loc 1 138 0
  96 0072 7A68     		ldr	r2, [r7, #4]
  97 0074 3023     		movs	r3, #48
  98 0076 C4F20203 		movt	r3, 16386
  99 007a 9A42     		cmp	r2, r3
 100 007c 0AD1     		bne	.L5
 139:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 140:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel3 */
 141:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel3_IT_Mask;
 101              		.loc 1 141 0
 102 007e 0023     		movs	r3, #0
 103 0080 C4F20203 		movt	r3, 16386
 104 0084 0022     		movs	r2, #0
 105 0086 C4F20202 		movt	r2, 16386
 106 008a 5268     		ldr	r2, [r2, #4]
 107 008c 42F47062 		orr	r2, r2, #3840
 108 0090 5A60     		str	r2, [r3, #4]
 109 0092 A6E0     		b	.L1
 110              	.L5:
 142:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 143:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel4)
 111              		.loc 1 143 0
 112 0094 7A68     		ldr	r2, [r7, #4]
 113 0096 4423     		movs	r3, #68
 114 0098 C4F20203 		movt	r3, 16386
 115 009c 9A42     		cmp	r2, r3
 116 009e 0AD1     		bne	.L6
 144:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 145:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel4 */
 146:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel4_IT_Mask;
 117              		.loc 1 146 0
 118 00a0 0023     		movs	r3, #0
 119 00a2 C4F20203 		movt	r3, 16386
 120 00a6 0022     		movs	r2, #0
 121 00a8 C4F20202 		movt	r2, 16386
 122 00ac 5268     		ldr	r2, [r2, #4]
 123 00ae 42F47042 		orr	r2, r2, #61440
 124 00b2 5A60     		str	r2, [r3, #4]
 125 00b4 95E0     		b	.L1
 126              	.L6:
 147:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 148:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel5)
 127              		.loc 1 148 0
 128 00b6 7A68     		ldr	r2, [r7, #4]
 129 00b8 5823     		movs	r3, #88
 130 00ba C4F20203 		movt	r3, 16386
 131 00be 9A42     		cmp	r2, r3
 132 00c0 0AD1     		bne	.L7
 149:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 150:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel5 */
 151:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel5_IT_Mask;
 133              		.loc 1 151 0
 134 00c2 0023     		movs	r3, #0
 135 00c4 C4F20203 		movt	r3, 16386
 136 00c8 0022     		movs	r2, #0
 137 00ca C4F20202 		movt	r2, 16386
 138 00ce 5268     		ldr	r2, [r2, #4]
 139 00d0 42F47022 		orr	r2, r2, #983040
 140 00d4 5A60     		str	r2, [r3, #4]
 141 00d6 84E0     		b	.L1
 142              	.L7:
 152:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 153:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel6)
 143              		.loc 1 153 0
 144 00d8 7A68     		ldr	r2, [r7, #4]
 145 00da 6C23     		movs	r3, #108
 146 00dc C4F20203 		movt	r3, 16386
 147 00e0 9A42     		cmp	r2, r3
 148 00e2 0AD1     		bne	.L8
 154:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 155:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel6 */
 156:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel6_IT_Mask;
 149              		.loc 1 156 0
 150 00e4 0023     		movs	r3, #0
 151 00e6 C4F20203 		movt	r3, 16386
 152 00ea 0022     		movs	r2, #0
 153 00ec C4F20202 		movt	r2, 16386
 154 00f0 5268     		ldr	r2, [r2, #4]
 155 00f2 42F47002 		orr	r2, r2, #15728640
 156 00f6 5A60     		str	r2, [r3, #4]
 157 00f8 73E0     		b	.L1
 158              	.L8:
 157:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 158:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel7)
 159              		.loc 1 158 0
 160 00fa 7A68     		ldr	r2, [r7, #4]
 161 00fc 8023     		movs	r3, #128
 162 00fe C4F20203 		movt	r3, 16386
 163 0102 9A42     		cmp	r2, r3
 164 0104 0AD1     		bne	.L9
 159:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 160:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel7 */
 161:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel7_IT_Mask;
 165              		.loc 1 161 0
 166 0106 0023     		movs	r3, #0
 167 0108 C4F20203 		movt	r3, 16386
 168 010c 0022     		movs	r2, #0
 169 010e C4F20202 		movt	r2, 16386
 170 0112 5268     		ldr	r2, [r2, #4]
 171 0114 42F07062 		orr	r2, r2, #251658240
 172 0118 5A60     		str	r2, [r3, #4]
 173 011a 62E0     		b	.L1
 174              	.L9:
 162:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 163:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel1)
 175              		.loc 1 163 0
 176 011c 7A68     		ldr	r2, [r7, #4]
 177 011e 4FF48163 		mov	r3, #1032
 178 0122 C4F20203 		movt	r3, 16386
 179 0126 9A42     		cmp	r2, r3
 180 0128 0CD1     		bne	.L10
 164:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 165:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel1 */
 166:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel1_IT_Mask;
 181              		.loc 1 166 0
 182 012a 4FF48063 		mov	r3, #1024
 183 012e C4F20203 		movt	r3, 16386
 184 0132 4FF48062 		mov	r2, #1024
 185 0136 C4F20202 		movt	r2, 16386
 186 013a 5268     		ldr	r2, [r2, #4]
 187 013c 42F00F02 		orr	r2, r2, #15
 188 0140 5A60     		str	r2, [r3, #4]
 189 0142 4EE0     		b	.L1
 190              	.L10:
 167:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 168:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel2)
 191              		.loc 1 168 0
 192 0144 7A68     		ldr	r2, [r7, #4]
 193 0146 40F21C43 		movw	r3, #1052
 194 014a C4F20203 		movt	r3, 16386
 195 014e 9A42     		cmp	r2, r3
 196 0150 0CD1     		bne	.L11
 169:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 170:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel2 */
 171:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel2_IT_Mask;
 197              		.loc 1 171 0
 198 0152 4FF48063 		mov	r3, #1024
 199 0156 C4F20203 		movt	r3, 16386
 200 015a 4FF48062 		mov	r2, #1024
 201 015e C4F20202 		movt	r2, 16386
 202 0162 5268     		ldr	r2, [r2, #4]
 203 0164 42F0F002 		orr	r2, r2, #240
 204 0168 5A60     		str	r2, [r3, #4]
 205 016a 3AE0     		b	.L1
 206              	.L11:
 172:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 173:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel3)
 207              		.loc 1 173 0
 208 016c 7A68     		ldr	r2, [r7, #4]
 209 016e 4FF48663 		mov	r3, #1072
 210 0172 C4F20203 		movt	r3, 16386
 211 0176 9A42     		cmp	r2, r3
 212 0178 0CD1     		bne	.L12
 174:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 175:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel3 */
 176:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel3_IT_Mask;
 213              		.loc 1 176 0
 214 017a 4FF48063 		mov	r3, #1024
 215 017e C4F20203 		movt	r3, 16386
 216 0182 4FF48062 		mov	r2, #1024
 217 0186 C4F20202 		movt	r2, 16386
 218 018a 5268     		ldr	r2, [r2, #4]
 219 018c 42F47062 		orr	r2, r2, #3840
 220 0190 5A60     		str	r2, [r3, #4]
 221 0192 26E0     		b	.L1
 222              	.L12:
 177:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 178:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel4)
 223              		.loc 1 178 0
 224 0194 7A68     		ldr	r2, [r7, #4]
 225 0196 40F24443 		movw	r3, #1092
 226 019a C4F20203 		movt	r3, 16386
 227 019e 9A42     		cmp	r2, r3
 228 01a0 0CD1     		bne	.L13
 179:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 180:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel4 */
 181:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel4_IT_Mask;
 229              		.loc 1 181 0
 230 01a2 4FF48063 		mov	r3, #1024
 231 01a6 C4F20203 		movt	r3, 16386
 232 01aa 4FF48062 		mov	r2, #1024
 233 01ae C4F20202 		movt	r2, 16386
 234 01b2 5268     		ldr	r2, [r2, #4]
 235 01b4 42F47042 		orr	r2, r2, #61440
 236 01b8 5A60     		str	r2, [r3, #4]
 237 01ba 12E0     		b	.L1
 238              	.L13:
 182:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 183:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else
 184:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   { 
 185:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     if (DMAy_Channelx == DMA2_Channel5)
 239              		.loc 1 185 0
 240 01bc 7A68     		ldr	r2, [r7, #4]
 241 01be 4FF48B63 		mov	r3, #1112
 242 01c2 C4F20203 		movt	r3, 16386
 243 01c6 9A42     		cmp	r2, r3
 244 01c8 0BD1     		bne	.L1
 186:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     {
 187:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****       /* Reset interrupt pending bits for DMA2 Channel5 */
 188:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****       DMA2->IFCR |= DMA2_Channel5_IT_Mask;
 245              		.loc 1 188 0
 246 01ca 4FF48063 		mov	r3, #1024
 247 01ce C4F20203 		movt	r3, 16386
 248 01d2 4FF48062 		mov	r2, #1024
 249 01d6 C4F20202 		movt	r2, 16386
 250 01da 5268     		ldr	r2, [r2, #4]
 251 01dc 42F47022 		orr	r2, r2, #983040
 252 01e0 5A60     		str	r2, [r3, #4]
 253              	.L1:
 189:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     }
 190:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 191:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 254              		.loc 1 191 0
 255 01e2 0C37     		adds	r7, r7, #12
 256 01e4 BD46     		mov	sp, r7
 257              		@ sp needed
 258 01e6 5DF8047B 		ldr	r7, [sp], #4
 259 01ea 7047     		bx	lr
 260              		.cfi_endproc
 261              	.LFE56:
 263              		.section	.text.DMA_Init,"ax",%progbits
 264              		.align	2
 265              		.global	DMA_Init
 266              		.thumb
 267              		.thumb_func
 269              	DMA_Init:
 270              	.LFB57:
 192:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 193:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 194:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Initializes the DMAy Channelx according to the specified
 195:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *         parameters in the DMA_InitStruct.
 196:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 197:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 198:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure that
 199:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *         contains the configuration information for the specified DMA Channel.
 200:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval None
 201:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 202:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** void DMA_Init(DMA_Channel_TypeDef* DMAy_Channelx, DMA_InitTypeDef* DMA_InitStruct)
 203:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 271              		.loc 1 203 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 16
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276 0000 80B4     		push	{r7}
 277              		.cfi_def_cfa_offset 4
 278              		.cfi_offset 7, -4
 279 0002 85B0     		sub	sp, sp, #20
 280              		.cfi_def_cfa_offset 24
 281 0004 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 283 0006 7860     		str	r0, [r7, #4]
 284 0008 3960     		str	r1, [r7]
 204:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 285              		.loc 1 204 0
 286 000a 0023     		movs	r3, #0
 287 000c FB60     		str	r3, [r7, #12]
 205:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 206:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 207:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 208:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_DIR(DMA_InitStruct->DMA_DIR));
 209:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DMA_InitStruct->DMA_BufferSize));
 210:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(DMA_InitStruct->DMA_PeripheralInc));
 211:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(DMA_InitStruct->DMA_MemoryInc));   
 212:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(DMA_InitStruct->DMA_PeripheralDataSize));
 213:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(DMA_InitStruct->DMA_MemoryDataSize));
 214:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MODE(DMA_InitStruct->DMA_Mode));
 215:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
 216:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_M2M_STATE(DMA_InitStruct->DMA_M2M));
 217:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 218:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CCR Configuration -----------------*/
 219:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Get the DMAy_Channelx CCR value */
 220:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   tmpreg = DMAy_Channelx->CCR;
 288              		.loc 1 220 0
 289 000e 7B68     		ldr	r3, [r7, #4]
 290 0010 1B68     		ldr	r3, [r3]
 291 0012 FB60     		str	r3, [r7, #12]
 221:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Clear MEM2MEM, PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
 222:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   tmpreg &= CCR_CLEAR_Mask;
 292              		.loc 1 222 0
 293 0014 FB68     		ldr	r3, [r7, #12]
 294 0016 23F4FF43 		bic	r3, r3, #32640
 295 001a 23F07003 		bic	r3, r3, #112
 296 001e FB60     		str	r3, [r7, #12]
 223:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Configure DMAy Channelx: data transfer, data size, priority level and mode */
 224:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Set DIR bit according to DMA_DIR value */
 225:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Set CIRC bit according to DMA_Mode value */
 226:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Set PINC bit according to DMA_PeripheralInc value */
 227:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Set MINC bit according to DMA_MemoryInc value */
 228:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Set PSIZE bits according to DMA_PeripheralDataSize value */
 229:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Set MSIZE bits according to DMA_MemoryDataSize value */
 230:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Set PL bits according to DMA_Priority value */
 231:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Set the MEM2MEM bit according to DMA_M2M value */
 232:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 297              		.loc 1 232 0
 298 0020 3B68     		ldr	r3, [r7]
 299 0022 9A68     		ldr	r2, [r3, #8]
 300 0024 3B68     		ldr	r3, [r7]
 301 0026 1B6A     		ldr	r3, [r3, #32]
 302 0028 1A43     		orrs	r2, r2, r3
 233:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 303              		.loc 1 233 0
 304 002a 3B68     		ldr	r3, [r7]
 305 002c 1B69     		ldr	r3, [r3, #16]
 232:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 306              		.loc 1 232 0
 307 002e 1A43     		orrs	r2, r2, r3
 308              		.loc 1 233 0
 309 0030 3B68     		ldr	r3, [r7]
 310 0032 5B69     		ldr	r3, [r3, #20]
 311 0034 1A43     		orrs	r2, r2, r3
 234:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 312              		.loc 1 234 0
 313 0036 3B68     		ldr	r3, [r7]
 314 0038 9B69     		ldr	r3, [r3, #24]
 233:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 315              		.loc 1 233 0
 316 003a 1A43     		orrs	r2, r2, r3
 317              		.loc 1 234 0
 318 003c 3B68     		ldr	r3, [r7]
 319 003e DB69     		ldr	r3, [r3, #28]
 320 0040 1A43     		orrs	r2, r2, r3
 235:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_Priority | DMA_InitStruct->DMA_M2M;
 321              		.loc 1 235 0
 322 0042 3B68     		ldr	r3, [r7]
 323 0044 5B6A     		ldr	r3, [r3, #36]
 234:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 324              		.loc 1 234 0
 325 0046 1A43     		orrs	r2, r2, r3
 326              		.loc 1 235 0
 327 0048 3B68     		ldr	r3, [r7]
 328 004a 9B6A     		ldr	r3, [r3, #40]
 329 004c 1343     		orrs	r3, r3, r2
 232:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 330              		.loc 1 232 0
 331 004e FA68     		ldr	r2, [r7, #12]
 332 0050 1343     		orrs	r3, r3, r2
 333 0052 FB60     		str	r3, [r7, #12]
 236:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 237:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CCR */
 238:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR = tmpreg;
 334              		.loc 1 238 0
 335 0054 7B68     		ldr	r3, [r7, #4]
 336 0056 FA68     		ldr	r2, [r7, #12]
 337 0058 1A60     		str	r2, [r3]
 239:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 240:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration ---------------*/
 241:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CNDTR */
 242:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = DMA_InitStruct->DMA_BufferSize;
 338              		.loc 1 242 0
 339 005a 3B68     		ldr	r3, [r7]
 340 005c DA68     		ldr	r2, [r3, #12]
 341 005e 7B68     		ldr	r3, [r7, #4]
 342 0060 5A60     		str	r2, [r3, #4]
 243:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 244:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CPAR Configuration ----------------*/
 245:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CPAR */
 246:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CPAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
 343              		.loc 1 246 0
 344 0062 3B68     		ldr	r3, [r7]
 345 0064 1A68     		ldr	r2, [r3]
 346 0066 7B68     		ldr	r3, [r7, #4]
 347 0068 9A60     		str	r2, [r3, #8]
 247:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 248:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CMAR Configuration ----------------*/
 249:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CMAR */
 250:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CMAR = DMA_InitStruct->DMA_MemoryBaseAddr;
 348              		.loc 1 250 0
 349 006a 3B68     		ldr	r3, [r7]
 350 006c 5A68     		ldr	r2, [r3, #4]
 351 006e 7B68     		ldr	r3, [r7, #4]
 352 0070 DA60     		str	r2, [r3, #12]
 251:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 353              		.loc 1 251 0
 354 0072 1437     		adds	r7, r7, #20
 355 0074 BD46     		mov	sp, r7
 356              		@ sp needed
 357 0076 5DF8047B 		ldr	r7, [sp], #4
 358 007a 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE57:
 362              		.section	.text.DMA_StructInit,"ax",%progbits
 363              		.align	2
 364              		.global	DMA_StructInit
 365              		.thumb
 366              		.thumb_func
 368              	DMA_StructInit:
 369              	.LFB58:
 252:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 253:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 254:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Fills each DMA_InitStruct member with its default value.
 255:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMA_InitStruct : pointer to a DMA_InitTypeDef structure which will
 256:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *         be initialized.
 257:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval None
 258:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 259:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)
 260:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 370              		.loc 1 260 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 8
 373              		@ frame_needed = 1, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 375 0000 80B4     		push	{r7}
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0002 83B0     		sub	sp, sp, #12
 379              		.cfi_def_cfa_offset 16
 380 0004 00AF     		add	r7, sp, #0
 381              		.cfi_def_cfa_register 7
 382 0006 7860     		str	r0, [r7, #4]
 261:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /*-------------- Reset DMA init structure parameters values ------------------*/
 262:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralBaseAddr member */
 263:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
 383              		.loc 1 263 0
 384 0008 7B68     		ldr	r3, [r7, #4]
 385 000a 0022     		movs	r2, #0
 386 000c 1A60     		str	r2, [r3]
 264:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryBaseAddr member */
 265:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryBaseAddr = 0;
 387              		.loc 1 265 0
 388 000e 7B68     		ldr	r3, [r7, #4]
 389 0010 0022     		movs	r2, #0
 390 0012 5A60     		str	r2, [r3, #4]
 266:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_DIR member */
 267:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralSRC;
 391              		.loc 1 267 0
 392 0014 7B68     		ldr	r3, [r7, #4]
 393 0016 0022     		movs	r2, #0
 394 0018 9A60     		str	r2, [r3, #8]
 268:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_BufferSize member */
 269:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_BufferSize = 0;
 395              		.loc 1 269 0
 396 001a 7B68     		ldr	r3, [r7, #4]
 397 001c 0022     		movs	r2, #0
 398 001e DA60     		str	r2, [r3, #12]
 270:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralInc member */
 271:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 399              		.loc 1 271 0
 400 0020 7B68     		ldr	r3, [r7, #4]
 401 0022 0022     		movs	r2, #0
 402 0024 1A61     		str	r2, [r3, #16]
 272:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryInc member */
 273:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
 403              		.loc 1 273 0
 404 0026 7B68     		ldr	r3, [r7, #4]
 405 0028 0022     		movs	r2, #0
 406 002a 5A61     		str	r2, [r3, #20]
 274:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralDataSize member */
 275:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 407              		.loc 1 275 0
 408 002c 7B68     		ldr	r3, [r7, #4]
 409 002e 0022     		movs	r2, #0
 410 0030 9A61     		str	r2, [r3, #24]
 276:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryDataSize member */
 277:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 411              		.loc 1 277 0
 412 0032 7B68     		ldr	r3, [r7, #4]
 413 0034 0022     		movs	r2, #0
 414 0036 DA61     		str	r2, [r3, #28]
 278:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_Mode member */
 279:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
 415              		.loc 1 279 0
 416 0038 7B68     		ldr	r3, [r7, #4]
 417 003a 0022     		movs	r2, #0
 418 003c 1A62     		str	r2, [r3, #32]
 280:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_Priority member */
 281:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
 419              		.loc 1 281 0
 420 003e 7B68     		ldr	r3, [r7, #4]
 421 0040 0022     		movs	r2, #0
 422 0042 5A62     		str	r2, [r3, #36]
 282:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Initialize the DMA_M2M member */
 283:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_M2M = DMA_M2M_Disable;
 423              		.loc 1 283 0
 424 0044 7B68     		ldr	r3, [r7, #4]
 425 0046 0022     		movs	r2, #0
 426 0048 9A62     		str	r2, [r3, #40]
 284:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 427              		.loc 1 284 0
 428 004a 0C37     		adds	r7, r7, #12
 429 004c BD46     		mov	sp, r7
 430              		@ sp needed
 431 004e 5DF8047B 		ldr	r7, [sp], #4
 432 0052 7047     		bx	lr
 433              		.cfi_endproc
 434              	.LFE58:
 436              		.section	.text.DMA_Cmd,"ax",%progbits
 437              		.align	2
 438              		.global	DMA_Cmd
 439              		.thumb
 440              		.thumb_func
 442              	DMA_Cmd:
 443              	.LFB59:
 285:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 286:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 287:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx.
 288:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 289:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 290:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  NewState: new state of the DMAy Channelx. 
 291:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   This parameter can be: ENABLE or DISABLE.
 292:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval None
 293:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 294:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** void DMA_Cmd(DMA_Channel_TypeDef* DMAy_Channelx, FunctionalState NewState)
 295:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 444              		.loc 1 295 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 8
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449 0000 80B4     		push	{r7}
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 7, -4
 452 0002 83B0     		sub	sp, sp, #12
 453              		.cfi_def_cfa_offset 16
 454 0004 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 456 0006 7860     		str	r0, [r7, #4]
 457 0008 0B46     		mov	r3, r1
 458 000a FB70     		strb	r3, [r7, #3]
 296:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 297:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 298:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 299:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 300:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   if (NewState != DISABLE)
 459              		.loc 1 300 0
 460 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 461 000e 002B     		cmp	r3, #0
 462 0010 06D0     		beq	.L17
 301:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 302:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Enable the selected DMAy Channelx */
 303:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR |= DMA_CCR1_EN;
 463              		.loc 1 303 0
 464 0012 7B68     		ldr	r3, [r7, #4]
 465 0014 1B68     		ldr	r3, [r3]
 466 0016 43F00102 		orr	r2, r3, #1
 467 001a 7B68     		ldr	r3, [r7, #4]
 468 001c 1A60     		str	r2, [r3]
 469 001e 06E0     		b	.L16
 470              	.L17:
 304:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 305:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else
 306:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 307:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Disable the selected DMAy Channelx */
 308:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR1_EN);
 471              		.loc 1 308 0
 472 0020 7B68     		ldr	r3, [r7, #4]
 473 0022 1A68     		ldr	r2, [r3]
 474 0024 4FF6FE73 		movw	r3, #65534
 475 0028 1340     		ands	r3, r3, r2
 476 002a 7A68     		ldr	r2, [r7, #4]
 477 002c 1360     		str	r3, [r2]
 478              	.L16:
 309:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 310:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 479              		.loc 1 310 0
 480 002e 0C37     		adds	r7, r7, #12
 481 0030 BD46     		mov	sp, r7
 482              		@ sp needed
 483 0032 5DF8047B 		ldr	r7, [sp], #4
 484 0036 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE59:
 488              		.section	.text.DMA_ITConfig,"ax",%progbits
 489              		.align	2
 490              		.global	DMA_ITConfig
 491              		.thumb
 492              		.thumb_func
 494              	DMA_ITConfig:
 495              	.LFB60:
 311:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 312:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 313:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx interrupts.
 314:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 315:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 316:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMA_IT: specifies the DMA interrupts sources to be enabled
 317:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   or disabled. 
 318:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   This parameter can be any combination of the following values:
 319:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_TC:  Transfer complete interrupt mask
 320:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_HT:  Half transfer interrupt mask
 321:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_TE:  Transfer error interrupt mask
 322:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  NewState: new state of the specified DMA interrupts.
 323:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   This parameter can be: ENABLE or DISABLE.
 324:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval None
 325:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 326:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** void DMA_ITConfig(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState)
 327:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 496              		.loc 1 327 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 16
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501 0000 80B4     		push	{r7}
 502              		.cfi_def_cfa_offset 4
 503              		.cfi_offset 7, -4
 504 0002 85B0     		sub	sp, sp, #20
 505              		.cfi_def_cfa_offset 24
 506 0004 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 508 0006 F860     		str	r0, [r7, #12]
 509 0008 B960     		str	r1, [r7, #8]
 510 000a 1346     		mov	r3, r2
 511 000c FB71     		strb	r3, [r7, #7]
 328:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 329:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 330:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CONFIG_IT(DMA_IT));
 331:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 332:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   if (NewState != DISABLE)
 512              		.loc 1 332 0
 513 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 514 0010 002B     		cmp	r3, #0
 515 0012 06D0     		beq	.L20
 333:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 334:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Enable the selected DMA interrupts */
 335:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR |= DMA_IT;
 516              		.loc 1 335 0
 517 0014 FB68     		ldr	r3, [r7, #12]
 518 0016 1A68     		ldr	r2, [r3]
 519 0018 BB68     		ldr	r3, [r7, #8]
 520 001a 1A43     		orrs	r2, r2, r3
 521 001c FB68     		ldr	r3, [r7, #12]
 522 001e 1A60     		str	r2, [r3]
 523 0020 06E0     		b	.L19
 524              	.L20:
 336:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 337:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else
 338:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 339:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Disable the selected DMA interrupts */
 340:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR &= ~DMA_IT;
 525              		.loc 1 340 0
 526 0022 FB68     		ldr	r3, [r7, #12]
 527 0024 1A68     		ldr	r2, [r3]
 528 0026 BB68     		ldr	r3, [r7, #8]
 529 0028 DB43     		mvns	r3, r3
 530 002a 1A40     		ands	r2, r2, r3
 531 002c FB68     		ldr	r3, [r7, #12]
 532 002e 1A60     		str	r2, [r3]
 533              	.L19:
 341:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 342:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 534              		.loc 1 342 0
 535 0030 1437     		adds	r7, r7, #20
 536 0032 BD46     		mov	sp, r7
 537              		@ sp needed
 538 0034 5DF8047B 		ldr	r7, [sp], #4
 539 0038 7047     		bx	lr
 540              		.cfi_endproc
 541              	.LFE60:
 543 003a 00BF     		.section	.text.DMA_SetCurrDataCounter,"ax",%progbits
 544              		.align	2
 545              		.global	DMA_SetCurrDataCounter
 546              		.thumb
 547              		.thumb_func
 549              	DMA_SetCurrDataCounter:
 550              	.LFB61:
 343:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 344:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 345:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Sets the number of data units in the current DMAy Channelx transfer.
 346:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 347:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *         x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 348:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DataNumber: The number of data units in the current DMAy Channelx
 349:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *         transfer.   
 350:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @note   This function can only be used when the DMAy_Channelx is disabled.                 
 351:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval None.
 352:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 353:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** void DMA_SetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx, uint16_t DataNumber)
 354:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 551              		.loc 1 354 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 8
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556 0000 80B4     		push	{r7}
 557              		.cfi_def_cfa_offset 4
 558              		.cfi_offset 7, -4
 559 0002 83B0     		sub	sp, sp, #12
 560              		.cfi_def_cfa_offset 16
 561 0004 00AF     		add	r7, sp, #0
 562              		.cfi_def_cfa_register 7
 563 0006 7860     		str	r0, [r7, #4]
 564 0008 0B46     		mov	r3, r1
 565 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 355:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 356:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 357:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   
 358:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration ---------------*/
 359:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CNDTR */
 360:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = DataNumber;  
 566              		.loc 1 360 0
 567 000c 7A88     		ldrh	r2, [r7, #2]
 568 000e 7B68     		ldr	r3, [r7, #4]
 569 0010 5A60     		str	r2, [r3, #4]
 361:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 570              		.loc 1 361 0
 571 0012 0C37     		adds	r7, r7, #12
 572 0014 BD46     		mov	sp, r7
 573              		@ sp needed
 574 0016 5DF8047B 		ldr	r7, [sp], #4
 575 001a 7047     		bx	lr
 576              		.cfi_endproc
 577              	.LFE61:
 579              		.section	.text.DMA_GetCurrDataCounter,"ax",%progbits
 580              		.align	2
 581              		.global	DMA_GetCurrDataCounter
 582              		.thumb
 583              		.thumb_func
 585              	DMA_GetCurrDataCounter:
 586              	.LFB62:
 362:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 363:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 364:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Returns the number of remaining data units in the current
 365:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *         DMAy Channelx transfer.
 366:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 367:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 368:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval The number of remaining data units in the current DMAy Channelx
 369:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *         transfer.
 370:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 371:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** uint16_t DMA_GetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx)
 372:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 587              		.loc 1 372 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 8
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 0000 80B4     		push	{r7}
 593              		.cfi_def_cfa_offset 4
 594              		.cfi_offset 7, -4
 595 0002 83B0     		sub	sp, sp, #12
 596              		.cfi_def_cfa_offset 16
 597 0004 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 599 0006 7860     		str	r0, [r7, #4]
 373:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 374:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 375:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Return the number of remaining data units for DMAy Channelx */
 376:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   return ((uint16_t)(DMAy_Channelx->CNDTR));
 600              		.loc 1 376 0
 601 0008 7B68     		ldr	r3, [r7, #4]
 602 000a 5B68     		ldr	r3, [r3, #4]
 603 000c 9BB2     		uxth	r3, r3
 377:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 604              		.loc 1 377 0
 605 000e 1846     		mov	r0, r3
 606 0010 0C37     		adds	r7, r7, #12
 607 0012 BD46     		mov	sp, r7
 608              		@ sp needed
 609 0014 5DF8047B 		ldr	r7, [sp], #4
 610 0018 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE62:
 614 001a 00BF     		.section	.text.DMA_GetFlagStatus,"ax",%progbits
 615              		.align	2
 616              		.global	DMA_GetFlagStatus
 617              		.thumb
 618              		.thumb_func
 620              	DMA_GetFlagStatus:
 621              	.LFB63:
 378:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 379:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 380:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Checks whether the specified DMAy Channelx flag is set or not.
 381:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_FLAG: specifies the flag to check.
 382:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   This parameter can be one of the following values:
 383:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 384:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 385:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 386:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 387:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 388:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 389:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
 390:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 391:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 392:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 393:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 394:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 395:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 396:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 397:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 398:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 399:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 400:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
 401:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 402:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 403:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL6: DMA1 Channel6 global flag.
 404:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC6: DMA1 Channel6 transfer complete flag.
 405:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT6: DMA1 Channel6 half transfer flag.
 406:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE6: DMA1 Channel6 transfer error flag.
 407:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL7: DMA1 Channel7 global flag.
 408:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC7: DMA1 Channel7 transfer complete flag.
 409:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT7: DMA1 Channel7 half transfer flag.
 410:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE7: DMA1 Channel7 transfer error flag.
 411:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL1: DMA2 Channel1 global flag.
 412:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC1: DMA2 Channel1 transfer complete flag.
 413:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT1: DMA2 Channel1 half transfer flag.
 414:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE1: DMA2 Channel1 transfer error flag.
 415:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL2: DMA2 Channel2 global flag.
 416:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC2: DMA2 Channel2 transfer complete flag.
 417:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT2: DMA2 Channel2 half transfer flag.
 418:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE2: DMA2 Channel2 transfer error flag.
 419:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL3: DMA2 Channel3 global flag.
 420:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC3: DMA2 Channel3 transfer complete flag.
 421:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT3: DMA2 Channel3 half transfer flag.
 422:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE3: DMA2 Channel3 transfer error flag.
 423:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL4: DMA2 Channel4 global flag.
 424:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC4: DMA2 Channel4 transfer complete flag.
 425:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT4: DMA2 Channel4 half transfer flag.
 426:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE4: DMA2 Channel4 transfer error flag.
 427:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL5: DMA2 Channel5 global flag.
 428:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC5: DMA2 Channel5 transfer complete flag.
 429:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
 430:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
 431:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval The new state of DMAy_FLAG (SET or RESET).
 432:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 433:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** FlagStatus DMA_GetFlagStatus(uint32_t DMAy_FLAG)
 434:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 622              		.loc 1 434 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 16
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627 0000 80B4     		push	{r7}
 628              		.cfi_def_cfa_offset 4
 629              		.cfi_offset 7, -4
 630 0002 85B0     		sub	sp, sp, #20
 631              		.cfi_def_cfa_offset 24
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 435:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   FlagStatus bitstatus = RESET;
 635              		.loc 1 435 0
 636 0008 0023     		movs	r3, #0
 637 000a FB73     		strb	r3, [r7, #15]
 436:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 638              		.loc 1 436 0
 639 000c 0023     		movs	r3, #0
 640 000e BB60     		str	r3, [r7, #8]
 437:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   
 438:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 439:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_GET_FLAG(DMAy_FLAG));
 440:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 441:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 442:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
 641              		.loc 1 442 0
 642 0010 7B68     		ldr	r3, [r7, #4]
 643 0012 03F08053 		and	r3, r3, #268435456
 644 0016 002B     		cmp	r3, #0
 645 0018 06D0     		beq	.L26
 443:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 444:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Get DMA2 ISR register value */
 445:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     tmpreg = DMA2->ISR ;
 646              		.loc 1 445 0
 647 001a 4FF48063 		mov	r3, #1024
 648 001e C4F20203 		movt	r3, 16386
 649 0022 1B68     		ldr	r3, [r3]
 650 0024 BB60     		str	r3, [r7, #8]
 651 0026 04E0     		b	.L27
 652              	.L26:
 446:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 447:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else
 448:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 449:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Get DMA1 ISR register value */
 450:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     tmpreg = DMA1->ISR ;
 653              		.loc 1 450 0
 654 0028 0023     		movs	r3, #0
 655 002a C4F20203 		movt	r3, 16386
 656 002e 1B68     		ldr	r3, [r3]
 657 0030 BB60     		str	r3, [r7, #8]
 658              	.L27:
 451:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 452:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 453:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the status of the specified DMAy flag */
 454:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   if ((tmpreg & DMAy_FLAG) != (uint32_t)RESET)
 659              		.loc 1 454 0
 660 0032 BA68     		ldr	r2, [r7, #8]
 661 0034 7B68     		ldr	r3, [r7, #4]
 662 0036 1340     		ands	r3, r3, r2
 663 0038 002B     		cmp	r3, #0
 664 003a 02D0     		beq	.L28
 455:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 456:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* DMAy_FLAG is set */
 457:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     bitstatus = SET;
 665              		.loc 1 457 0
 666 003c 0123     		movs	r3, #1
 667 003e FB73     		strb	r3, [r7, #15]
 668 0040 01E0     		b	.L29
 669              	.L28:
 458:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 459:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else
 460:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 461:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* DMAy_FLAG is reset */
 462:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     bitstatus = RESET;
 670              		.loc 1 462 0
 671 0042 0023     		movs	r3, #0
 672 0044 FB73     		strb	r3, [r7, #15]
 673              	.L29:
 463:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 464:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   
 465:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Return the DMAy_FLAG status */
 466:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   return  bitstatus;
 674              		.loc 1 466 0
 675 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 467:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 676              		.loc 1 467 0
 677 0048 1846     		mov	r0, r3
 678 004a 1437     		adds	r7, r7, #20
 679 004c BD46     		mov	sp, r7
 680              		@ sp needed
 681 004e 5DF8047B 		ldr	r7, [sp], #4
 682 0052 7047     		bx	lr
 683              		.cfi_endproc
 684              	.LFE63:
 686              		.section	.text.DMA_ClearFlag,"ax",%progbits
 687              		.align	2
 688              		.global	DMA_ClearFlag
 689              		.thumb
 690              		.thumb_func
 692              	DMA_ClearFlag:
 693              	.LFB64:
 468:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 469:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 470:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Clears the DMAy Channelx's pending flags.
 471:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_FLAG: specifies the flag to clear.
 472:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 473:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 474:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 475:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 476:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 477:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 478:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 479:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
 480:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 481:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 482:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 483:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 484:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 485:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 486:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 487:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 488:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 489:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 490:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
 491:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 492:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 493:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL6: DMA1 Channel6 global flag.
 494:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC6: DMA1 Channel6 transfer complete flag.
 495:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT6: DMA1 Channel6 half transfer flag.
 496:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE6: DMA1 Channel6 transfer error flag.
 497:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL7: DMA1 Channel7 global flag.
 498:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC7: DMA1 Channel7 transfer complete flag.
 499:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT7: DMA1 Channel7 half transfer flag.
 500:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE7: DMA1 Channel7 transfer error flag.
 501:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL1: DMA2 Channel1 global flag.
 502:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC1: DMA2 Channel1 transfer complete flag.
 503:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT1: DMA2 Channel1 half transfer flag.
 504:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE1: DMA2 Channel1 transfer error flag.
 505:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL2: DMA2 Channel2 global flag.
 506:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC2: DMA2 Channel2 transfer complete flag.
 507:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT2: DMA2 Channel2 half transfer flag.
 508:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE2: DMA2 Channel2 transfer error flag.
 509:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL3: DMA2 Channel3 global flag.
 510:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC3: DMA2 Channel3 transfer complete flag.
 511:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT3: DMA2 Channel3 half transfer flag.
 512:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE3: DMA2 Channel3 transfer error flag.
 513:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL4: DMA2 Channel4 global flag.
 514:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC4: DMA2 Channel4 transfer complete flag.
 515:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT4: DMA2 Channel4 half transfer flag.
 516:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE4: DMA2 Channel4 transfer error flag.
 517:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL5: DMA2 Channel5 global flag.
 518:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC5: DMA2 Channel5 transfer complete flag.
 519:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
 520:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
 521:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval None
 522:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 523:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** void DMA_ClearFlag(uint32_t DMAy_FLAG)
 524:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 694              		.loc 1 524 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 8
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699 0000 80B4     		push	{r7}
 700              		.cfi_def_cfa_offset 4
 701              		.cfi_offset 7, -4
 702 0002 83B0     		sub	sp, sp, #12
 703              		.cfi_def_cfa_offset 16
 704 0004 00AF     		add	r7, sp, #0
 705              		.cfi_def_cfa_register 7
 706 0006 7860     		str	r0, [r7, #4]
 525:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 526:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CLEAR_FLAG(DMAy_FLAG));
 527:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 528:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 529:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
 707              		.loc 1 529 0
 708 0008 7B68     		ldr	r3, [r7, #4]
 709 000a 03F08053 		and	r3, r3, #268435456
 710 000e 002B     		cmp	r3, #0
 711 0010 06D0     		beq	.L32
 530:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 531:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy flags */
 532:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA2->IFCR = DMAy_FLAG;
 712              		.loc 1 532 0
 713 0012 4FF48063 		mov	r3, #1024
 714 0016 C4F20203 		movt	r3, 16386
 715 001a 7A68     		ldr	r2, [r7, #4]
 716 001c 5A60     		str	r2, [r3, #4]
 717 001e 04E0     		b	.L31
 718              	.L32:
 533:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 534:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else
 535:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 536:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy flags */
 537:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA1->IFCR = DMAy_FLAG;
 719              		.loc 1 537 0
 720 0020 0023     		movs	r3, #0
 721 0022 C4F20203 		movt	r3, 16386
 722 0026 7A68     		ldr	r2, [r7, #4]
 723 0028 5A60     		str	r2, [r3, #4]
 724              	.L31:
 538:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 539:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 725              		.loc 1 539 0
 726 002a 0C37     		adds	r7, r7, #12
 727 002c BD46     		mov	sp, r7
 728              		@ sp needed
 729 002e 5DF8047B 		ldr	r7, [sp], #4
 730 0032 7047     		bx	lr
 731              		.cfi_endproc
 732              	.LFE64:
 734              		.section	.text.DMA_GetITStatus,"ax",%progbits
 735              		.align	2
 736              		.global	DMA_GetITStatus
 737              		.thumb
 738              		.thumb_func
 740              	DMA_GetITStatus:
 741              	.LFB65:
 540:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 541:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 542:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Checks whether the specified DMAy Channelx interrupt has occurred or not.
 543:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_IT: specifies the DMAy interrupt source to check. 
 544:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   This parameter can be one of the following values:
 545:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 546:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 547:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 548:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 549:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
 550:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 551:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 552:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 553:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 554:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 555:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 556:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 557:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 558:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 559:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 560:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 561:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
 562:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 563:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 564:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 565:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL6: DMA1 Channel6 global interrupt.
 566:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC6: DMA1 Channel6 transfer complete interrupt.
 567:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT6: DMA1 Channel6 half transfer interrupt.
 568:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE6: DMA1 Channel6 transfer error interrupt.
 569:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL7: DMA1 Channel7 global interrupt.
 570:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC7: DMA1 Channel7 transfer complete interrupt.
 571:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT7: DMA1 Channel7 half transfer interrupt.
 572:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE7: DMA1 Channel7 transfer error interrupt.
 573:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL1: DMA2 Channel1 global interrupt.
 574:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC1: DMA2 Channel1 transfer complete interrupt.
 575:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT1: DMA2 Channel1 half transfer interrupt.
 576:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE1: DMA2 Channel1 transfer error interrupt.
 577:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL2: DMA2 Channel2 global interrupt.
 578:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC2: DMA2 Channel2 transfer complete interrupt.
 579:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT2: DMA2 Channel2 half transfer interrupt.
 580:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE2: DMA2 Channel2 transfer error interrupt.
 581:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL3: DMA2 Channel3 global interrupt.
 582:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC3: DMA2 Channel3 transfer complete interrupt.
 583:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT3: DMA2 Channel3 half transfer interrupt.
 584:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE3: DMA2 Channel3 transfer error interrupt.
 585:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL4: DMA2 Channel4 global interrupt.
 586:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC4: DMA2 Channel4 transfer complete interrupt.
 587:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT4: DMA2 Channel4 half transfer interrupt.
 588:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE4: DMA2 Channel4 transfer error interrupt.
 589:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL5: DMA2 Channel5 global interrupt.
 590:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC5: DMA2 Channel5 transfer complete interrupt.
 591:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT5: DMA2 Channel5 half transfer interrupt.
 592:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE5: DMA2 Channel5 transfer error interrupt.
 593:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval The new state of DMAy_IT (SET or RESET).
 594:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 595:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** ITStatus DMA_GetITStatus(uint32_t DMAy_IT)
 596:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 742              		.loc 1 596 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 16
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747 0000 80B4     		push	{r7}
 748              		.cfi_def_cfa_offset 4
 749              		.cfi_offset 7, -4
 750 0002 85B0     		sub	sp, sp, #20
 751              		.cfi_def_cfa_offset 24
 752 0004 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 597:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   ITStatus bitstatus = RESET;
 755              		.loc 1 597 0
 756 0008 0023     		movs	r3, #0
 757 000a FB73     		strb	r3, [r7, #15]
 598:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 758              		.loc 1 598 0
 759 000c 0023     		movs	r3, #0
 760 000e BB60     		str	r3, [r7, #8]
 599:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 600:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 601:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_GET_IT(DMAy_IT));
 602:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 603:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Calculate the used DMA */
 604:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   if ((DMAy_IT & FLAG_Mask) != (uint32_t)RESET)
 761              		.loc 1 604 0
 762 0010 7B68     		ldr	r3, [r7, #4]
 763 0012 03F08053 		and	r3, r3, #268435456
 764 0016 002B     		cmp	r3, #0
 765 0018 06D0     		beq	.L35
 605:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 606:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Get DMA2 ISR register value */
 607:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     tmpreg = DMA2->ISR;
 766              		.loc 1 607 0
 767 001a 4FF48063 		mov	r3, #1024
 768 001e C4F20203 		movt	r3, 16386
 769 0022 1B68     		ldr	r3, [r3]
 770 0024 BB60     		str	r3, [r7, #8]
 771 0026 04E0     		b	.L36
 772              	.L35:
 608:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 609:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else
 610:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 611:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Get DMA1 ISR register value */
 612:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     tmpreg = DMA1->ISR;
 773              		.loc 1 612 0
 774 0028 0023     		movs	r3, #0
 775 002a C4F20203 		movt	r3, 16386
 776 002e 1B68     		ldr	r3, [r3]
 777 0030 BB60     		str	r3, [r7, #8]
 778              	.L36:
 613:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 614:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 615:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the status of the specified DMAy interrupt */
 616:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   if ((tmpreg & DMAy_IT) != (uint32_t)RESET)
 779              		.loc 1 616 0
 780 0032 BA68     		ldr	r2, [r7, #8]
 781 0034 7B68     		ldr	r3, [r7, #4]
 782 0036 1340     		ands	r3, r3, r2
 783 0038 002B     		cmp	r3, #0
 784 003a 02D0     		beq	.L37
 617:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 618:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* DMAy_IT is set */
 619:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     bitstatus = SET;
 785              		.loc 1 619 0
 786 003c 0123     		movs	r3, #1
 787 003e FB73     		strb	r3, [r7, #15]
 788 0040 01E0     		b	.L38
 789              	.L37:
 620:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 621:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else
 622:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 623:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* DMAy_IT is reset */
 624:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     bitstatus = RESET;
 790              		.loc 1 624 0
 791 0042 0023     		movs	r3, #0
 792 0044 FB73     		strb	r3, [r7, #15]
 793              	.L38:
 625:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 626:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Return the DMA_IT status */
 627:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   return  bitstatus;
 794              		.loc 1 627 0
 795 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 628:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 796              		.loc 1 628 0
 797 0048 1846     		mov	r0, r3
 798 004a 1437     		adds	r7, r7, #20
 799 004c BD46     		mov	sp, r7
 800              		@ sp needed
 801 004e 5DF8047B 		ldr	r7, [sp], #4
 802 0052 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE65:
 806              		.section	.text.DMA_ClearITPendingBit,"ax",%progbits
 807              		.align	2
 808              		.global	DMA_ClearITPendingBit
 809              		.thumb
 810              		.thumb_func
 812              	DMA_ClearITPendingBit:
 813              	.LFB66:
 629:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 630:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** /**
 631:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @brief  Clears the DMAy Channelx's interrupt pending bits.
 632:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @param  DMAy_IT: specifies the DMAy interrupt pending bit to clear.
 633:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 634:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 635:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 636:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 637:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 638:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
 639:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 640:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 641:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 642:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 643:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 644:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 645:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 646:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 647:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 648:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 649:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 650:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
 651:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 652:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 653:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 654:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL6: DMA1 Channel6 global interrupt.
 655:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC6: DMA1 Channel6 transfer complete interrupt.
 656:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT6: DMA1 Channel6 half transfer interrupt.
 657:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE6: DMA1 Channel6 transfer error interrupt.
 658:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL7: DMA1 Channel7 global interrupt.
 659:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC7: DMA1 Channel7 transfer complete interrupt.
 660:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT7: DMA1 Channel7 half transfer interrupt.
 661:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE7: DMA1 Channel7 transfer error interrupt.
 662:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL1: DMA2 Channel1 global interrupt.
 663:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC1: DMA2 Channel1 transfer complete interrupt.
 664:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT1: DMA2 Channel1 half transfer interrupt.
 665:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE1: DMA2 Channel1 transfer error interrupt.
 666:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL2: DMA2 Channel2 global interrupt.
 667:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC2: DMA2 Channel2 transfer complete interrupt.
 668:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT2: DMA2 Channel2 half transfer interrupt.
 669:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE2: DMA2 Channel2 transfer error interrupt.
 670:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL3: DMA2 Channel3 global interrupt.
 671:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC3: DMA2 Channel3 transfer complete interrupt.
 672:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT3: DMA2 Channel3 half transfer interrupt.
 673:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE3: DMA2 Channel3 transfer error interrupt.
 674:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL4: DMA2 Channel4 global interrupt.
 675:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC4: DMA2 Channel4 transfer complete interrupt.
 676:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT4: DMA2 Channel4 half transfer interrupt.
 677:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE4: DMA2 Channel4 transfer error interrupt.
 678:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL5: DMA2 Channel5 global interrupt.
 679:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC5: DMA2 Channel5 transfer complete interrupt.
 680:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT5: DMA2 Channel5 half transfer interrupt.
 681:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE5: DMA2 Channel5 transfer error interrupt.
 682:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   * @retval None
 683:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   */
 684:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** void DMA_ClearITPendingBit(uint32_t DMAy_IT)
 685:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** {
 814              		.loc 1 685 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 8
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              		.cfi_def_cfa_offset 4
 821              		.cfi_offset 7, -4
 822 0002 83B0     		sub	sp, sp, #12
 823              		.cfi_def_cfa_offset 16
 824 0004 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
 826 0006 7860     		str	r0, [r7, #4]
 686:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Check the parameters */
 687:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CLEAR_IT(DMAy_IT));
 688:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** 
 689:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 690:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   if ((DMAy_IT & FLAG_Mask) != (uint32_t)RESET)
 827              		.loc 1 690 0
 828 0008 7B68     		ldr	r3, [r7, #4]
 829 000a 03F08053 		and	r3, r3, #268435456
 830 000e 002B     		cmp	r3, #0
 831 0010 06D0     		beq	.L41
 691:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 692:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy interrupt pending bits */
 693:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA2->IFCR = DMAy_IT;
 832              		.loc 1 693 0
 833 0012 4FF48063 		mov	r3, #1024
 834 0016 C4F20203 		movt	r3, 16386
 835 001a 7A68     		ldr	r2, [r7, #4]
 836 001c 5A60     		str	r2, [r3, #4]
 837 001e 04E0     		b	.L40
 838              	.L41:
 694:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 695:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   else
 696:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   {
 697:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy interrupt pending bits */
 698:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****     DMA1->IFCR = DMAy_IT;
 839              		.loc 1 698 0
 840 0020 0023     		movs	r3, #0
 841 0022 C4F20203 		movt	r3, 16386
 842 0026 7A68     		ldr	r2, [r7, #4]
 843 0028 5A60     		str	r2, [r3, #4]
 844              	.L40:
 699:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c ****   }
 700:../stm32_std/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c **** }
 845              		.loc 1 700 0
 846 002a 0C37     		adds	r7, r7, #12
 847 002c BD46     		mov	sp, r7
 848              		@ sp needed
 849 002e 5DF8047B 		ldr	r7, [sp], #4
 850 0032 7047     		bx	lr
 851              		.cfi_endproc
 852              	.LFE66:
 854              		.text
 855              	.Letext0:
 856              		.file 2 "c:\\program files (x86)\\mentorgraphics\\sourcery_codebench_lite_for_arm_eabi\\arm-none-e
 857              		.file 3 "D:\\workspace\\rfm12\\stm32_std\\CMSIS\\CM3\\DeviceSupport\\ST\\STM32F10x/stm32f10x.h"
 858              		.file 4 "D:\\workspace\\rfm12\\stm32_std\\STM32F10x_StdPeriph_Driver\\inc/stm32f10x_dma.h"
 859              		.file 5 "D:\\workspace\\rfm12\\stm32_std\\CMSIS\\CM3\\CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_dma.c
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:19     .text.DMA_DeInit:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:24     .text.DMA_DeInit:00000000 DMA_DeInit
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:264    .text.DMA_Init:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:269    .text.DMA_Init:00000000 DMA_Init
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:363    .text.DMA_StructInit:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:368    .text.DMA_StructInit:00000000 DMA_StructInit
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:437    .text.DMA_Cmd:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:442    .text.DMA_Cmd:00000000 DMA_Cmd
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:489    .text.DMA_ITConfig:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:494    .text.DMA_ITConfig:00000000 DMA_ITConfig
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:544    .text.DMA_SetCurrDataCounter:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:549    .text.DMA_SetCurrDataCounter:00000000 DMA_SetCurrDataCounter
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:580    .text.DMA_GetCurrDataCounter:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:585    .text.DMA_GetCurrDataCounter:00000000 DMA_GetCurrDataCounter
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:615    .text.DMA_GetFlagStatus:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:620    .text.DMA_GetFlagStatus:00000000 DMA_GetFlagStatus
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:687    .text.DMA_ClearFlag:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:692    .text.DMA_ClearFlag:00000000 DMA_ClearFlag
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:735    .text.DMA_GetITStatus:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:740    .text.DMA_GetITStatus:00000000 DMA_GetITStatus
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:807    .text.DMA_ClearITPendingBit:00000000 $t
C:\Users\Serj\AppData\Local\Temp\ccIdP9jb.s:812    .text.DMA_ClearITPendingBit:00000000 DMA_ClearITPendingBit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.69ef232822fae12fd5bc55108b75a1e4
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.47.c45d264953076019d6b3b1c20e8ad771
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm3.h.144.f4158be2ca5a330459fef4214a4bb0f1
                           .group:00000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:00000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922
                           .group:00000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:00000000 wm4.stm32f10x_can.h.25.48aab46fcce6d08400bf960b028e4698
                           .group:00000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:00000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:00000000 wm4.stm32f10x_exti.h.25.b9064155c5c006b5154b39788c79001a
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_i2c.h.25.7b6cbaea24c6f25f538f8516d1814cb2
                           .group:00000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:00000000 wm4.stm32f10x_sdio.h.25.1fb5280a7690ef99070096bf8c866b3a
                           .group:00000000 wm4.stm32f10x_spi.h.25.68b3d5ccfcf895f9fe505ce20c0c300f
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_dma.h.95.3ba03f0eac1ed728f3bbe553623f105a

NO UNDEFINED SYMBOLS
